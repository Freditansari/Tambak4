//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CPLModel", "FK_PondsProductionCycle_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Contact), "PondsProductionCycles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PondsProductionCycle), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductSalesOrders_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Contact), "ProductSalesOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductSalesOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_Tasks_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Contact), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.Task), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.PondsProductionCycle), "FeedingLogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.FeedingLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_Tasks_Ponds", "Ponds", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Pond), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.Task), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.PondsProductionCycle), "SamplingLogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.SamplingLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_Tasks_PondsProductionCycle", "PondsProductionCycles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.PondsProductionCycle), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.Task), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.PondsProductionCycle), "WaterParameterLogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.WaterParameterLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductRequired_Tasks", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Task), "ProductRequireds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductRequired), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductSalesOrders_ProductRequired", "ProductRequireds", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.ProductRequired), "ProductSalesOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductSalesOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductSalesOrders_Tasks", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Task), "ProductSalesOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductSalesOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ResultNote_ResultNote", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Task), "ResultNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ResultNote), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ContactToUserLink_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Contact), "ContactToUserLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ContactToUserLink), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_Products_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.Product), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_FeedingLogs_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Product), "FeedingLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.FeedingLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductPurchaseLog_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "ProductPurchaseLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductPurchaseLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductRequired_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Product), "ProductRequired", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductRequired), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductSalesOrders_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Product), "ProductSalesOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductSalesOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductsDetails_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "ProductsDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductsDetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_Facilities_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Company), "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.Facility), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.ProductPurchaseLog), "ProductQuantity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductQuantity), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_ProductQuantity_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Product), "ProductQuantity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.ProductQuantity), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PurchaseTaxTransactions_MasterTax", "MasterTax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.MasterTax), "PurchaseTaxTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PurchaseTaxTransaction), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PODetails_products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "PODetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PODetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PurchaseOrders_Facilities", "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Facility), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PODetails_PurchaseOrders", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.PurchaseOrder), "PODetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PODetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PurchaseOrders_Vendor", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Supplier), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_CurrencyRate_MasterCurrency", "MasterCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.MasterCurrency), "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.CurrencyRate), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_MasterCurrency_CurrencyShortCode", "MasterCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.MasterCurrency), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_BatchHeader_Facilities", "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Facility), "BatchHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchHeader), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_BatchHeader_products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "BatchHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchHeader), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.DeliveryLog), "BatchHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchHeader), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_dbo_BatchHeader_PODetailID", "PODetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.PODetail), "BatchHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchHeader), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_DeliveryLog_PODetails", "PODetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.PODetail), "DeliveryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.DeliveryLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_DeliveryLog_products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Product), "DeliveryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.DeliveryLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_BatchDetails_BatchHeader", "BatchHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.BatchHeader), "BatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchDetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.PondsProductionCycle), "BatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchDetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_dbo_BatchDetails_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "BatchDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.BatchDetail), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PondConsumptionsLog_Ponds", "Pond", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.Pond), "PondConsumptionsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PondConsumptionsLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tambak.Web.PondsProductionCycle), "PondConsumptionsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PondConsumptionsLog), true)]
[assembly: EdmRelationshipAttribute("CPLModel", "FK_PondConsumptionsLog_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tambak.Web.Product), "PondConsumptionsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tambak.Web.PondConsumptionsLog), true)]

#endregion

namespace tambak.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedingLog> FeedingLogs
        {
            get
            {
                if ((_FeedingLogs == null))
                {
                    _FeedingLogs = base.CreateObjectSet<FeedingLog>("FeedingLogs");
                }
                return _FeedingLogs;
            }
        }
        private ObjectSet<FeedingLog> _FeedingLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pond> Ponds
        {
            get
            {
                if ((_Ponds == null))
                {
                    _Ponds = base.CreateObjectSet<Pond>("Ponds");
                }
                return _Ponds;
            }
        }
        private ObjectSet<Pond> _Ponds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PondsProductionCycle> PondsProductionCycles
        {
            get
            {
                if ((_PondsProductionCycles == null))
                {
                    _PondsProductionCycles = base.CreateObjectSet<PondsProductionCycle>("PondsProductionCycles");
                }
                return _PondsProductionCycles;
            }
        }
        private ObjectSet<PondsProductionCycle> _PondsProductionCycles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductPurchaseLog> ProductPurchaseLogs
        {
            get
            {
                if ((_ProductPurchaseLogs == null))
                {
                    _ProductPurchaseLogs = base.CreateObjectSet<ProductPurchaseLog>("ProductPurchaseLogs");
                }
                return _ProductPurchaseLogs;
            }
        }
        private ObjectSet<ProductPurchaseLog> _ProductPurchaseLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductRequired> ProductRequireds
        {
            get
            {
                if ((_ProductRequireds == null))
                {
                    _ProductRequireds = base.CreateObjectSet<ProductRequired>("ProductRequireds");
                }
                return _ProductRequireds;
            }
        }
        private ObjectSet<ProductRequired> _ProductRequireds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSalesOrder> ProductSalesOrders
        {
            get
            {
                if ((_ProductSalesOrders == null))
                {
                    _ProductSalesOrders = base.CreateObjectSet<ProductSalesOrder>("ProductSalesOrders");
                }
                return _ProductSalesOrders;
            }
        }
        private ObjectSet<ProductSalesOrder> _ProductSalesOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductsDetail> ProductsDetails
        {
            get
            {
                if ((_ProductsDetails == null))
                {
                    _ProductsDetails = base.CreateObjectSet<ProductsDetail>("ProductsDetails");
                }
                return _ProductsDetails;
            }
        }
        private ObjectSet<ProductsDetail> _ProductsDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultNote> ResultNotes
        {
            get
            {
                if ((_ResultNotes == null))
                {
                    _ResultNotes = base.CreateObjectSet<ResultNote>("ResultNotes");
                }
                return _ResultNotes;
            }
        }
        private ObjectSet<ResultNote> _ResultNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SamplingLog> SamplingLogs
        {
            get
            {
                if ((_SamplingLogs == null))
                {
                    _SamplingLogs = base.CreateObjectSet<SamplingLog>("SamplingLogs");
                }
                return _SamplingLogs;
            }
        }
        private ObjectSet<SamplingLog> _SamplingLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WaterParameterLog> WaterParameterLogs
        {
            get
            {
                if ((_WaterParameterLogs == null))
                {
                    _WaterParameterLogs = base.CreateObjectSet<WaterParameterLog>("WaterParameterLogs");
                }
                return _WaterParameterLogs;
            }
        }
        private ObjectSet<WaterParameterLog> _WaterParameterLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductRequiredView> ProductRequiredViews
        {
            get
            {
                if ((_ProductRequiredViews == null))
                {
                    _ProductRequiredViews = base.CreateObjectSet<ProductRequiredView>("ProductRequiredViews");
                }
                return _ProductRequiredViews;
            }
        }
        private ObjectSet<ProductRequiredView> _ProductRequiredViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SumProductRequiredView> SumProductRequiredViews
        {
            get
            {
                if ((_SumProductRequiredViews == null))
                {
                    _SumProductRequiredViews = base.CreateObjectSet<SumProductRequiredView>("SumProductRequiredViews");
                }
                return _SumProductRequiredViews;
            }
        }
        private ObjectSet<SumProductRequiredView> _SumProductRequiredViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactToUserLink> ContactToUserLinks
        {
            get
            {
                if ((_ContactToUserLinks == null))
                {
                    _ContactToUserLinks = base.CreateObjectSet<ContactToUserLink>("ContactToUserLinks");
                }
                return _ContactToUserLinks;
            }
        }
        private ObjectSet<ContactToUserLink> _ContactToUserLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CumulativeFeedView> CumulativeFeedViews
        {
            get
            {
                if ((_CumulativeFeedViews == null))
                {
                    _CumulativeFeedViews = base.CreateObjectSet<CumulativeFeedView>("CumulativeFeedViews");
                }
                return _CumulativeFeedViews;
            }
        }
        private ObjectSet<CumulativeFeedView> _CumulativeFeedViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrderDetailsView> SalesOrderDetailsViews
        {
            get
            {
                if ((_SalesOrderDetailsViews == null))
                {
                    _SalesOrderDetailsViews = base.CreateObjectSet<SalesOrderDetailsView>("SalesOrderDetailsViews");
                }
                return _SalesOrderDetailsViews;
            }
        }
        private ObjectSet<SalesOrderDetailsView> _SalesOrderDetailsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyFeedSummaryView> DailyFeedSummaryViews
        {
            get
            {
                if ((_DailyFeedSummaryViews == null))
                {
                    _DailyFeedSummaryViews = base.CreateObjectSet<DailyFeedSummaryView>("DailyFeedSummaryViews");
                }
                return _DailyFeedSummaryViews;
            }
        }
        private ObjectSet<DailyFeedSummaryView> _DailyFeedSummaryViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AverageDailyFeedSummary> AverageDailyFeedSummaries
        {
            get
            {
                if ((_AverageDailyFeedSummaries == null))
                {
                    _AverageDailyFeedSummaries = base.CreateObjectSet<AverageDailyFeedSummary>("AverageDailyFeedSummaries");
                }
                return _AverageDailyFeedSummaries;
            }
        }
        private ObjectSet<AverageDailyFeedSummary> _AverageDailyFeedSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FRGuide> FRGuides
        {
            get
            {
                if ((_FRGuides == null))
                {
                    _FRGuides = base.CreateObjectSet<FRGuide>("FRGuides");
                }
                return _FRGuides;
            }
        }
        private ObjectSet<FRGuide> _FRGuides;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredFeedNext10Days> RequiredFeedNext10Days
        {
            get
            {
                if ((_RequiredFeedNext10Days == null))
                {
                    _RequiredFeedNext10Days = base.CreateObjectSet<RequiredFeedNext10Days>("RequiredFeedNext10Days");
                }
                return _RequiredFeedNext10Days;
            }
        }
        private ObjectSet<RequiredFeedNext10Days> _RequiredFeedNext10Days;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredFeedNext14days> RequiredFeedNext14days
        {
            get
            {
                if ((_RequiredFeedNext14days == null))
                {
                    _RequiredFeedNext14days = base.CreateObjectSet<RequiredFeedNext14days>("RequiredFeedNext14days");
                }
                return _RequiredFeedNext14days;
            }
        }
        private ObjectSet<RequiredFeedNext14days> _RequiredFeedNext14days;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredFeedNext3days> RequiredFeedNext3days
        {
            get
            {
                if ((_RequiredFeedNext3days == null))
                {
                    _RequiredFeedNext3days = base.CreateObjectSet<RequiredFeedNext3days>("RequiredFeedNext3days");
                }
                return _RequiredFeedNext3days;
            }
        }
        private ObjectSet<RequiredFeedNext3days> _RequiredFeedNext3days;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequredFeedNext7days> RequredFeedNext7days
        {
            get
            {
                if ((_RequredFeedNext7days == null))
                {
                    _RequredFeedNext7days = base.CreateObjectSet<RequredFeedNext7days>("RequredFeedNext7days");
                }
                return _RequredFeedNext7days;
            }
        }
        private ObjectSet<RequredFeedNext7days> _RequredFeedNext7days;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PDOControl> PDOControls
        {
            get
            {
                if ((_PDOControls == null))
                {
                    _PDOControls = base.CreateObjectSet<PDOControl>("PDOControls");
                }
                return _PDOControls;
            }
        }
        private ObjectSet<PDOControl> _PDOControls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductsInfoView> ProductsInfoViews
        {
            get
            {
                if ((_ProductsInfoViews == null))
                {
                    _ProductsInfoViews = base.CreateObjectSet<ProductsInfoView>("ProductsInfoViews");
                }
                return _ProductsInfoViews;
            }
        }
        private ObjectSet<ProductsInfoView> _ProductsInfoViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitofMeasurement> UnitofMeasurements
        {
            get
            {
                if ((_UnitofMeasurements == null))
                {
                    _UnitofMeasurements = base.CreateObjectSet<UnitofMeasurement>("UnitofMeasurements");
                }
                return _UnitofMeasurements;
            }
        }
        private ObjectSet<UnitofMeasurement> _UnitofMeasurements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facility> Facilities
        {
            get
            {
                if ((_Facilities == null))
                {
                    _Facilities = base.CreateObjectSet<Facility>("Facilities");
                }
                return _Facilities;
            }
        }
        private ObjectSet<Facility> _Facilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductQuantity> ProductQuantities
        {
            get
            {
                if ((_ProductQuantities == null))
                {
                    _ProductQuantities = base.CreateObjectSet<ProductQuantity>("ProductQuantities");
                }
                return _ProductQuantities;
            }
        }
        private ObjectSet<ProductQuantity> _ProductQuantities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterTax> MasterTaxes
        {
            get
            {
                if ((_MasterTaxes == null))
                {
                    _MasterTaxes = base.CreateObjectSet<MasterTax>("MasterTaxes");
                }
                return _MasterTaxes;
            }
        }
        private ObjectSet<MasterTax> _MasterTaxes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseTaxTransaction> PurchaseTaxTransactions
        {
            get
            {
                if ((_PurchaseTaxTransactions == null))
                {
                    _PurchaseTaxTransactions = base.CreateObjectSet<PurchaseTaxTransaction>("PurchaseTaxTransactions");
                }
                return _PurchaseTaxTransactions;
            }
        }
        private ObjectSet<PurchaseTaxTransaction> _PurchaseTaxTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PODetail> PODetails
        {
            get
            {
                if ((_PODetails == null))
                {
                    _PODetails = base.CreateObjectSet<PODetail>("PODetails");
                }
                return _PODetails;
            }
        }
        private ObjectSet<PODetail> _PODetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyRate> CurrencyRates
        {
            get
            {
                if ((_CurrencyRates == null))
                {
                    _CurrencyRates = base.CreateObjectSet<CurrencyRate>("CurrencyRates");
                }
                return _CurrencyRates;
            }
        }
        private ObjectSet<CurrencyRate> _CurrencyRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterCurrency> MasterCurrencies
        {
            get
            {
                if ((_MasterCurrencies == null))
                {
                    _MasterCurrencies = base.CreateObjectSet<MasterCurrency>("MasterCurrencies");
                }
                return _MasterCurrencies;
            }
        }
        private ObjectSet<MasterCurrency> _MasterCurrencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchHeader> BatchHeaders
        {
            get
            {
                if ((_BatchHeaders == null))
                {
                    _BatchHeaders = base.CreateObjectSet<BatchHeader>("BatchHeaders");
                }
                return _BatchHeaders;
            }
        }
        private ObjectSet<BatchHeader> _BatchHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeliveryLog> DeliveryLogs
        {
            get
            {
                if ((_DeliveryLogs == null))
                {
                    _DeliveryLogs = base.CreateObjectSet<DeliveryLog>("DeliveryLogs");
                }
                return _DeliveryLogs;
            }
        }
        private ObjectSet<DeliveryLog> _DeliveryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PODetailsView> PODetailsViews
        {
            get
            {
                if ((_PODetailsViews == null))
                {
                    _PODetailsViews = base.CreateObjectSet<PODetailsView>("PODetailsViews");
                }
                return _PODetailsViews;
            }
        }
        private ObjectSet<PODetailsView> _PODetailsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchDetail> BatchDetails
        {
            get
            {
                if ((_BatchDetails == null))
                {
                    _BatchDetails = base.CreateObjectSet<BatchDetail>("BatchDetails");
                }
                return _BatchDetails;
            }
        }
        private ObjectSet<BatchDetail> _BatchDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PODeliveredQuantity> PODeliveredQuantities
        {
            get
            {
                if ((_PODeliveredQuantities == null))
                {
                    _PODeliveredQuantities = base.CreateObjectSet<PODeliveredQuantity>("PODeliveredQuantities");
                }
                return _PODeliveredQuantities;
            }
        }
        private ObjectSet<PODeliveredQuantity> _PODeliveredQuantities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PondConsumptionsLog> PondConsumptionsLogs
        {
            get
            {
                if ((_PondConsumptionsLogs == null))
                {
                    _PondConsumptionsLogs = base.CreateObjectSet<PondConsumptionsLog>("PondConsumptionsLogs");
                }
                return _PondConsumptionsLogs;
            }
        }
        private ObjectSet<PondConsumptionsLog> _PondConsumptionsLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<batchQuantityView> batchQuantityViews
        {
            get
            {
                if ((_batchQuantityViews == null))
                {
                    _batchQuantityViews = base.CreateObjectSet<batchQuantityView>("batchQuantityViews");
                }
                return _batchQuantityViews;
            }
        }
        private ObjectSet<batchQuantityView> _batchQuantityViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchConsumptionJoin> BatchConsumptionJoins
        {
            get
            {
                if ((_BatchConsumptionJoins == null))
                {
                    _BatchConsumptionJoins = base.CreateObjectSet<BatchConsumptionJoin>("BatchConsumptionJoins");
                }
                return _BatchConsumptionJoins;
            }
        }
        private ObjectSet<BatchConsumptionJoin> _BatchConsumptionJoins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Harvest> Harvests
        {
            get
            {
                if ((_Harvests == null))
                {
                    _Harvests = base.CreateObjectSet<Harvest>("Harvests");
                }
                return _Harvests;
            }
        }
        private ObjectSet<Harvest> _Harvests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrentActivePond> CurrentActivePonds
        {
            get
            {
                if ((_CurrentActivePonds == null))
                {
                    _CurrentActivePonds = base.CreateObjectSet<CurrentActivePond>("CurrentActivePonds");
                }
                return _CurrentActivePonds;
            }
        }
        private ObjectSet<CurrentActivePond> _CurrentActivePonds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeNameView> EmployeeNameViews
        {
            get
            {
                if ((_EmployeeNameViews == null))
                {
                    _EmployeeNameViews = base.CreateObjectSet<EmployeeNameView>("EmployeeNameViews");
                }
                return _EmployeeNameViews;
            }
        }
        private ObjectSet<EmployeeNameView> _EmployeeNameViews;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedingLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedingLogs(FeedingLog feedingLog)
        {
            base.AddObject("FeedingLogs", feedingLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ponds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPonds(Pond pond)
        {
            base.AddObject("Ponds", pond);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PondsProductionCycles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPondsProductionCycles(PondsProductionCycle pondsProductionCycle)
        {
            base.AddObject("PondsProductionCycles", pondsProductionCycle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductPurchaseLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductPurchaseLogs(ProductPurchaseLog productPurchaseLog)
        {
            base.AddObject("ProductPurchaseLogs", productPurchaseLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductRequireds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductRequireds(ProductRequired productRequired)
        {
            base.AddObject("ProductRequireds", productRequired);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSalesOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSalesOrders(ProductSalesOrder productSalesOrder)
        {
            base.AddObject("ProductSalesOrders", productSalesOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductsDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductsDetails(ProductsDetail productsDetail)
        {
            base.AddObject("ProductsDetails", productsDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultNotes(ResultNote resultNote)
        {
            base.AddObject("ResultNotes", resultNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SamplingLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamplingLogs(SamplingLog samplingLog)
        {
            base.AddObject("SamplingLogs", samplingLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WaterParameterLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWaterParameterLogs(WaterParameterLog waterParameterLog)
        {
            base.AddObject("WaterParameterLogs", waterParameterLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductRequiredViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductRequiredViews(ProductRequiredView productRequiredView)
        {
            base.AddObject("ProductRequiredViews", productRequiredView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SumProductRequiredViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSumProductRequiredViews(SumProductRequiredView sumProductRequiredView)
        {
            base.AddObject("SumProductRequiredViews", sumProductRequiredView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactToUserLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactToUserLinks(ContactToUserLink contactToUserLink)
        {
            base.AddObject("ContactToUserLinks", contactToUserLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CumulativeFeedViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCumulativeFeedViews(CumulativeFeedView cumulativeFeedView)
        {
            base.AddObject("CumulativeFeedViews", cumulativeFeedView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrderDetailsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrderDetailsViews(SalesOrderDetailsView salesOrderDetailsView)
        {
            base.AddObject("SalesOrderDetailsViews", salesOrderDetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyFeedSummaryViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyFeedSummaryViews(DailyFeedSummaryView dailyFeedSummaryView)
        {
            base.AddObject("DailyFeedSummaryViews", dailyFeedSummaryView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AverageDailyFeedSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAverageDailyFeedSummaries(AverageDailyFeedSummary averageDailyFeedSummary)
        {
            base.AddObject("AverageDailyFeedSummaries", averageDailyFeedSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FRGuides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFRGuides(FRGuide fRGuide)
        {
            base.AddObject("FRGuides", fRGuide);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredFeedNext10Days EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredFeedNext10Days(RequiredFeedNext10Days requiredFeedNext10Days)
        {
            base.AddObject("RequiredFeedNext10Days", requiredFeedNext10Days);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredFeedNext14days EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredFeedNext14days(RequiredFeedNext14days requiredFeedNext14days)
        {
            base.AddObject("RequiredFeedNext14days", requiredFeedNext14days);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredFeedNext3days EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredFeedNext3days(RequiredFeedNext3days requiredFeedNext3days)
        {
            base.AddObject("RequiredFeedNext3days", requiredFeedNext3days);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequredFeedNext7days EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequredFeedNext7days(RequredFeedNext7days requredFeedNext7days)
        {
            base.AddObject("RequredFeedNext7days", requredFeedNext7days);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PDOControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPDOControls(PDOControl pDOControl)
        {
            base.AddObject("PDOControls", pDOControl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductsInfoViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductsInfoViews(ProductsInfoView productsInfoView)
        {
            base.AddObject("ProductsInfoViews", productsInfoView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitofMeasurements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitofMeasurements(UnitofMeasurement unitofMeasurement)
        {
            base.AddObject("UnitofMeasurements", unitofMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilities(Facility facility)
        {
            base.AddObject("Facilities", facility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductQuantities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductQuantities(ProductQuantity productQuantity)
        {
            base.AddObject("ProductQuantities", productQuantity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterTaxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterTaxes(MasterTax masterTax)
        {
            base.AddObject("MasterTaxes", masterTax);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseTaxTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseTaxTransactions(PurchaseTaxTransaction purchaseTaxTransaction)
        {
            base.AddObject("PurchaseTaxTransactions", purchaseTaxTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PODetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPODetails(PODetail pODetail)
        {
            base.AddObject("PODetails", pODetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyRates(CurrencyRate currencyRate)
        {
            base.AddObject("CurrencyRates", currencyRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCurrencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCurrencies(MasterCurrency masterCurrency)
        {
            base.AddObject("MasterCurrencies", masterCurrency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BatchHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatchHeaders(BatchHeader batchHeader)
        {
            base.AddObject("BatchHeaders", batchHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeliveryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeliveryLogs(DeliveryLog deliveryLog)
        {
            base.AddObject("DeliveryLogs", deliveryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PODetailsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPODetailsViews(PODetailsView pODetailsView)
        {
            base.AddObject("PODetailsViews", pODetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BatchDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatchDetails(BatchDetail batchDetail)
        {
            base.AddObject("BatchDetails", batchDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PODeliveredQuantities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPODeliveredQuantities(PODeliveredQuantity pODeliveredQuantity)
        {
            base.AddObject("PODeliveredQuantities", pODeliveredQuantity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PondConsumptionsLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPondConsumptionsLogs(PondConsumptionsLog pondConsumptionsLog)
        {
            base.AddObject("PondConsumptionsLogs", pondConsumptionsLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the batchQuantityViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobatchQuantityViews(batchQuantityView batchQuantityView)
        {
            base.AddObject("batchQuantityViews", batchQuantityView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BatchConsumptionJoins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatchConsumptionJoins(BatchConsumptionJoin batchConsumptionJoin)
        {
            base.AddObject("BatchConsumptionJoins", batchConsumptionJoin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Harvests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHarvests(Harvest harvest)
        {
            base.AddObject("Harvests", harvest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrentActivePonds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrentActivePonds(CurrentActivePond currentActivePond)
        {
            base.AddObject("CurrentActivePonds", currentActivePond);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeNameViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeNameViews(EmployeeNameView employeeNameView)
        {
            base.AddObject("EmployeeNameViews", employeeNameView);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="AverageDailyFeedSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AverageDailyFeedSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AverageDailyFeedSummary object.
        /// </summary>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static AverageDailyFeedSummary CreateAverageDailyFeedSummary(global::System.Int32 productionCycleID)
        {
            AverageDailyFeedSummary averageDailyFeedSummary = new AverageDailyFeedSummary();
            averageDailyFeedSummary.ProductionCycleID = productionCycleID;
            return averageDailyFeedSummary;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Average
        {
            get
            {
                return _Average;
            }
            set
            {
                OnAverageChanging(value);
                ReportPropertyChanging("Average");
                _Average = StructuralObject.SetValidValue(value, "Average");
                ReportPropertyChanged("Average");
                OnAverageChanged();
            }
        }
        private Nullable<global::System.Single> _Average;
        partial void OnAverageChanging(Nullable<global::System.Single> value);
        partial void OnAverageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="BatchConsumptionJoin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchConsumptionJoin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchConsumptionJoin object.
        /// </summary>
        /// <param name="batchDetailID">Initial value of the BatchDetailID property.</param>
        /// <param name="consumptionLogID">Initial value of the ConsumptionLogID property.</param>
        /// <param name="batchConsumptionJoinID">Initial value of the BatchConsumptionJoinID property.</param>
        public static BatchConsumptionJoin CreateBatchConsumptionJoin(global::System.Int32 batchDetailID, global::System.Int32 consumptionLogID, global::System.Int32 batchConsumptionJoinID)
        {
            BatchConsumptionJoin batchConsumptionJoin = new BatchConsumptionJoin();
            batchConsumptionJoin.BatchDetailID = batchDetailID;
            batchConsumptionJoin.ConsumptionLogID = consumptionLogID;
            batchConsumptionJoin.BatchConsumptionJoinID = batchConsumptionJoinID;
            return batchConsumptionJoin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchDetailID
        {
            get
            {
                return _BatchDetailID;
            }
            set
            {
                OnBatchDetailIDChanging(value);
                ReportPropertyChanging("BatchDetailID");
                _BatchDetailID = StructuralObject.SetValidValue(value, "BatchDetailID");
                ReportPropertyChanged("BatchDetailID");
                OnBatchDetailIDChanged();
            }
        }
        private global::System.Int32 _BatchDetailID;
        partial void OnBatchDetailIDChanging(global::System.Int32 value);
        partial void OnBatchDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsumptionLogID
        {
            get
            {
                return _ConsumptionLogID;
            }
            set
            {
                OnConsumptionLogIDChanging(value);
                ReportPropertyChanging("ConsumptionLogID");
                _ConsumptionLogID = StructuralObject.SetValidValue(value, "ConsumptionLogID");
                ReportPropertyChanged("ConsumptionLogID");
                OnConsumptionLogIDChanged();
            }
        }
        private global::System.Int32 _ConsumptionLogID;
        partial void OnConsumptionLogIDChanging(global::System.Int32 value);
        partial void OnConsumptionLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchConsumptionJoinID
        {
            get
            {
                return _BatchConsumptionJoinID;
            }
            set
            {
                if (_BatchConsumptionJoinID != value)
                {
                    OnBatchConsumptionJoinIDChanging(value);
                    ReportPropertyChanging("BatchConsumptionJoinID");
                    _BatchConsumptionJoinID = StructuralObject.SetValidValue(value, "BatchConsumptionJoinID");
                    ReportPropertyChanged("BatchConsumptionJoinID");
                    OnBatchConsumptionJoinIDChanged();
                }
            }
        }
        private global::System.Int32 _BatchConsumptionJoinID;
        partial void OnBatchConsumptionJoinIDChanging(global::System.Int32 value);
        partial void OnBatchConsumptionJoinIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="BatchDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchDetail object.
        /// </summary>
        /// <param name="batchTrxID">Initial value of the BatchTrxID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="buyPrice">Initial value of the BuyPrice property.</param>
        /// <param name="batchHeaderID">Initial value of the batchHeaderID property.</param>
        /// <param name="isVoid">Initial value of the isVoid property.</param>
        public static BatchDetail CreateBatchDetail(global::System.Int32 batchTrxID, global::System.Int32 productID, global::System.Double quantity, global::System.Double buyPrice, global::System.Int32 batchHeaderID, global::System.Boolean isVoid)
        {
            BatchDetail batchDetail = new BatchDetail();
            batchDetail.BatchTrxID = batchTrxID;
            batchDetail.ProductID = productID;
            batchDetail.Quantity = quantity;
            batchDetail.BuyPrice = buyPrice;
            batchDetail.batchHeaderID = batchHeaderID;
            batchDetail.isVoid = isVoid;
            return batchDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchTrxID
        {
            get
            {
                return _BatchTrxID;
            }
            set
            {
                if (_BatchTrxID != value)
                {
                    OnBatchTrxIDChanging(value);
                    ReportPropertyChanging("BatchTrxID");
                    _BatchTrxID = StructuralObject.SetValidValue(value, "BatchTrxID");
                    ReportPropertyChanged("BatchTrxID");
                    OnBatchTrxIDChanged();
                }
            }
        }
        private global::System.Int32 _BatchTrxID;
        partial void OnBatchTrxIDChanging(global::System.Int32 value);
        partial void OnBatchTrxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrxDate
        {
            get
            {
                return _TrxDate;
            }
            set
            {
                OnTrxDateChanging(value);
                ReportPropertyChanging("TrxDate");
                _TrxDate = StructuralObject.SetValidValue(value, "TrxDate");
                ReportPropertyChanged("TrxDate");
                OnTrxDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrxDate;
        partial void OnTrxDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrxDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> soldPrice
        {
            get
            {
                return _soldPrice;
            }
            set
            {
                OnsoldPriceChanging(value);
                ReportPropertyChanging("soldPrice");
                _soldPrice = StructuralObject.SetValidValue(value, "soldPrice");
                ReportPropertyChanged("soldPrice");
                OnsoldPriceChanged();
            }
        }
        private Nullable<global::System.Double> _soldPrice;
        partial void OnsoldPriceChanging(Nullable<global::System.Double> value);
        partial void OnsoldPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BuyPrice
        {
            get
            {
                return _BuyPrice;
            }
            set
            {
                OnBuyPriceChanging(value);
                ReportPropertyChanging("BuyPrice");
                _BuyPrice = StructuralObject.SetValidValue(value, "BuyPrice");
                ReportPropertyChanged("BuyPrice");
                OnBuyPriceChanged();
            }
        }
        private global::System.Double _BuyPrice;
        partial void OnBuyPriceChanging(global::System.Double value);
        partial void OnBuyPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 batchHeaderID
        {
            get
            {
                return _batchHeaderID;
            }
            set
            {
                OnbatchHeaderIDChanging(value);
                ReportPropertyChanging("batchHeaderID");
                _batchHeaderID = StructuralObject.SetValidValue(value, "batchHeaderID");
                ReportPropertyChanged("batchHeaderID");
                OnbatchHeaderIDChanged();
            }
        }
        private global::System.Int32 _batchHeaderID;
        partial void OnbatchHeaderIDChanging(global::System.Int32 value);
        partial void OnbatchHeaderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isVoid
        {
            get
            {
                return _isVoid;
            }
            set
            {
                OnisVoidChanging(value);
                ReportPropertyChanging("isVoid");
                _isVoid = StructuralObject.SetValidValue(value, "isVoid");
                ReportPropertyChanged("isVoid");
                OnisVoidChanged();
            }
        }
        private global::System.Boolean _isVoid;
        partial void OnisVoidChanging(global::System.Boolean value);
        partial void OnisVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionCycleID;
        partial void OnProductionCycleIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalesOrderDetailID
        {
            get
            {
                return _SalesOrderDetailID;
            }
            set
            {
                OnSalesOrderDetailIDChanging(value);
                ReportPropertyChanging("SalesOrderDetailID");
                _SalesOrderDetailID = StructuralObject.SetValidValue(value, "SalesOrderDetailID");
                ReportPropertyChanged("SalesOrderDetailID");
                OnSalesOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SalesOrderDetailID;
        partial void OnSalesOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnSalesOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, true, "userName");
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchDetails_BatchHeader", "BatchHeader")]
        public BatchHeader BatchHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchHeader>("CPLModel.FK_BatchDetails_BatchHeader", "BatchHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchHeader>("CPLModel.FK_BatchDetails_BatchHeader", "BatchHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BatchHeader> BatchHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchHeader>("CPLModel.FK_BatchDetails_BatchHeader", "BatchHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BatchHeader>("CPLModel.FK_BatchDetails_BatchHeader", "BatchHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_BatchDetails_PondsProductionCycles", "PondsProductionCycle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchDetails_ProductID", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_dbo_BatchDetails_ProductID", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_dbo_BatchDetails_ProductID", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_dbo_BatchDetails_ProductID", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_dbo_BatchDetails_ProductID", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="BatchHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchHeader object.
        /// </summary>
        /// <param name="batchID">Initial value of the BatchID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="unitCost">Initial value of the unitCost property.</param>
        public static BatchHeader CreateBatchHeader(global::System.Int32 batchID, global::System.Int32 productID, global::System.Double unitCost)
        {
            BatchHeader batchHeader = new BatchHeader();
            batchHeader.BatchID = batchID;
            batchHeader.ProductID = productID;
            batchHeader.unitCost = unitCost;
            return batchHeader;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchID
        {
            get
            {
                return _BatchID;
            }
            set
            {
                if (_BatchID != value)
                {
                    OnBatchIDChanging(value);
                    ReportPropertyChanging("BatchID");
                    _BatchID = StructuralObject.SetValidValue(value, "BatchID");
                    ReportPropertyChanged("BatchID");
                    OnBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _BatchID;
        partial void OnBatchIDChanging(global::System.Int32 value);
        partial void OnBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double unitCost
        {
            get
            {
                return _unitCost;
            }
            set
            {
                OnunitCostChanging(value);
                ReportPropertyChanging("unitCost");
                _unitCost = StructuralObject.SetValidValue(value, "unitCost");
                ReportPropertyChanged("unitCost");
                OnunitCostChanged();
            }
        }
        private global::System.Double _unitCost;
        partial void OnunitCostChanging(global::System.Double value);
        partial void OnunitCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BatchDate
        {
            get
            {
                return _BatchDate;
            }
            set
            {
                OnBatchDateChanging(value);
                ReportPropertyChanging("BatchDate");
                _BatchDate = StructuralObject.SetValidValue(value, "BatchDate");
                ReportPropertyChanged("BatchDate");
                OnBatchDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BatchDate;
        partial void OnBatchDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBatchDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, "ExpireDate");
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacilitiesID
        {
            get
            {
                return _FacilitiesID;
            }
            set
            {
                OnFacilitiesIDChanging(value);
                ReportPropertyChanging("FacilitiesID");
                _FacilitiesID = StructuralObject.SetValidValue(value, "FacilitiesID");
                ReportPropertyChanged("FacilitiesID");
                OnFacilitiesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FacilitiesID;
        partial void OnFacilitiesIDChanging(Nullable<global::System.Int32> value);
        partial void OnFacilitiesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryLogID
        {
            get
            {
                return _DeliveryLogID;
            }
            set
            {
                OnDeliveryLogIDChanging(value);
                ReportPropertyChanging("DeliveryLogID");
                _DeliveryLogID = StructuralObject.SetValidValue(value, true, "DeliveryLogID");
                ReportPropertyChanged("DeliveryLogID");
                OnDeliveryLogIDChanged();
            }
        }
        private global::System.String _DeliveryLogID;
        partial void OnDeliveryLogIDChanging(global::System.String value);
        partial void OnDeliveryLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PODetailID
        {
            get
            {
                return _PODetailID;
            }
            set
            {
                OnPODetailIDChanging(value);
                ReportPropertyChanging("PODetailID");
                _PODetailID = StructuralObject.SetValidValue(value, "PODetailID");
                ReportPropertyChanged("PODetailID");
                OnPODetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PODetailID;
        partial void OnPODetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnPODetailIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchHeader_Facilities", "Facility")]
        public Facility Facility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_BatchHeader_Facilities", "Facility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_BatchHeader_Facilities", "Facility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facility> FacilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_BatchHeader_Facilities", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facility>("CPLModel.FK_BatchHeader_Facilities", "Facility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchHeader_products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_BatchHeader_products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_BatchHeader_products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_BatchHeader_products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_BatchHeader_products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog")]
        public DeliveryLog DeliveryLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryLog>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryLog>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeliveryLog> DeliveryLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryLog>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeliveryLog>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "DeliveryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchHeader_PODetailID", "PODetail")]
        public PODetail PODetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_dbo_BatchHeader_PODetailID", "PODetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_dbo_BatchHeader_PODetailID", "PODetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PODetail> PODetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_dbo_BatchHeader_PODetailID", "PODetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PODetail>("CPLModel.FK_dbo_BatchHeader_PODetailID", "PODetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchDetails_BatchHeader", "BatchDetail")]
        public EntityCollection<BatchDetail> BatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchDetail>("CPLModel.FK_BatchDetails_BatchHeader", "BatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchDetail>("CPLModel.FK_BatchDetails_BatchHeader", "BatchDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="batchQuantityView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class batchQuantityView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new batchQuantityView object.
        /// </summary>
        /// <param name="batchID">Initial value of the BatchID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="unitCost">Initial value of the unitCost property.</param>
        public static batchQuantityView CreatebatchQuantityView(global::System.Int32 batchID, global::System.Int32 productID, global::System.Double unitCost)
        {
            batchQuantityView batchQuantityView = new batchQuantityView();
            batchQuantityView.BatchID = batchID;
            batchQuantityView.ProductID = productID;
            batchQuantityView.unitCost = unitCost;
            return batchQuantityView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchID
        {
            get
            {
                return _BatchID;
            }
            set
            {
                if (_BatchID != value)
                {
                    OnBatchIDChanging(value);
                    ReportPropertyChanging("BatchID");
                    _BatchID = StructuralObject.SetValidValue(value, "BatchID");
                    ReportPropertyChanged("BatchID");
                    OnBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _BatchID;
        partial void OnBatchIDChanging(global::System.Int32 value);
        partial void OnBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BatchDate
        {
            get
            {
                return _BatchDate;
            }
            set
            {
                OnBatchDateChanging(value);
                ReportPropertyChanging("BatchDate");
                _BatchDate = StructuralObject.SetValidValue(value, "BatchDate");
                ReportPropertyChanged("BatchDate");
                OnBatchDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BatchDate;
        partial void OnBatchDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBatchDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Unit_Available
        {
            get
            {
                return _Unit_Available;
            }
            set
            {
                OnUnit_AvailableChanging(value);
                ReportPropertyChanging("Unit_Available");
                _Unit_Available = StructuralObject.SetValidValue(value, "Unit_Available");
                ReportPropertyChanged("Unit_Available");
                OnUnit_AvailableChanged();
            }
        }
        private Nullable<global::System.Double> _Unit_Available;
        partial void OnUnit_AvailableChanging(Nullable<global::System.Double> value);
        partial void OnUnit_AvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double unitCost
        {
            get
            {
                return _unitCost;
            }
            set
            {
                if (_unitCost != value)
                {
                    OnunitCostChanging(value);
                    ReportPropertyChanging("unitCost");
                    _unitCost = StructuralObject.SetValidValue(value, "unitCost");
                    ReportPropertyChanged("unitCost");
                    OnunitCostChanged();
                }
            }
        }
        private global::System.Double _unitCost;
        partial void OnunitCostChanging(global::System.Double value);
        partial void OnunitCostChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Products_Category", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("CPLModel.FK_Products_Category", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("CPLModel.FK_Products_Category", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String companyName, global::System.String address, global::System.String city, global::System.String zipCode, global::System.String country, global::System.String phoneNumber, global::System.String email)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.CompanyName = companyName;
            company.Address = address;
            company.City = city;
            company.ZipCode = zipCode;
            company.Country = country;
            company.PhoneNumber = phoneNumber;
            company.Email = email;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value, true, "EntryDate");
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.String _EntryDate;
        partial void OnEntryDateChanging(global::System.String value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true, "ContactPerson");
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Facilities_Companies", "Facility")]
        public EntityCollection<Facility> Facilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Facility>("CPLModel.FK_Facilities_Companies", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Facility>("CPLModel.FK_Facilities_Companies", "Facility", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static Contact CreateContact(global::System.Int32 contactID)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            return contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true, "Company");
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String jobTitle
        {
            get
            {
                return _jobTitle;
            }
            set
            {
                OnjobTitleChanging(value);
                ReportPropertyChanging("jobTitle");
                _jobTitle = StructuralObject.SetValidValue(value, true, "jobTitle");
                ReportPropertyChanged("jobTitle");
                OnjobTitleChanged();
            }
        }
        private global::System.String _jobTitle;
        partial void OnjobTitleChanging(global::System.String value);
        partial void OnjobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPhone
        {
            get
            {
                return _BusinessPhone;
            }
            set
            {
                OnBusinessPhoneChanging(value);
                ReportPropertyChanging("BusinessPhone");
                _BusinessPhone = StructuralObject.SetValidValue(value, true, "BusinessPhone");
                ReportPropertyChanged("BusinessPhone");
                OnBusinessPhoneChanged();
            }
        }
        private global::System.String _BusinessPhone;
        partial void OnBusinessPhoneChanging(global::System.String value);
        partial void OnBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String homePhone
        {
            get
            {
                return _homePhone;
            }
            set
            {
                OnhomePhoneChanging(value);
                ReportPropertyChanging("homePhone");
                _homePhone = StructuralObject.SetValidValue(value, true, "homePhone");
                ReportPropertyChanged("homePhone");
                OnhomePhoneChanged();
            }
        }
        private global::System.String _homePhone;
        partial void OnhomePhoneChanging(global::System.String value);
        partial void OnhomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true, "MobilePhone");
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fax
        {
            get
            {
                return _fax;
            }
            set
            {
                OnfaxChanging(value);
                ReportPropertyChanging("fax");
                _fax = StructuralObject.SetValidValue(value, true, "fax");
                ReportPropertyChanged("fax");
                OnfaxChanged();
            }
        }
        private global::System.String _fax;
        partial void OnfaxChanging(global::System.String value);
        partial void OnfaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true, "address");
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true, "city");
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zip
        {
            get
            {
                return _zip;
            }
            set
            {
                OnzipChanging(value);
                ReportPropertyChanging("zip");
                _zip = StructuralObject.SetValidValue(value, true, "zip");
                ReportPropertyChanged("zip");
                OnzipChanged();
            }
        }
        private global::System.String _zip;
        partial void OnzipChanging(global::System.String value);
        partial void OnzipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebPage
        {
            get
            {
                return _WebPage;
            }
            set
            {
                OnWebPageChanging(value);
                ReportPropertyChanging("WebPage");
                _WebPage = StructuralObject.SetValidValue(value, true, "WebPage");
                ReportPropertyChanged("WebPage");
                OnWebPageChanged();
            }
        }
        private global::System.String _WebPage;
        partial void OnWebPageChanging(global::System.String value);
        partial void OnWebPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> archive
        {
            get
            {
                return _archive;
            }
            set
            {
                OnarchiveChanging(value);
                ReportPropertyChanging("archive");
                _archive = StructuralObject.SetValidValue(value, "archive");
                ReportPropertyChanged("archive");
                OnarchiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _archive;
        partial void OnarchiveChanging(Nullable<global::System.Boolean> value);
        partial void OnarchiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondsProductionCycle_Contacts", "PondsProductionCycles")]
        public EntityCollection<PondsProductionCycle> PondsProductionCycles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PondsProductionCycle>("CPLModel.FK_PondsProductionCycle_Contacts", "PondsProductionCycles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PondsProductionCycle>("CPLModel.FK_PondsProductionCycle_Contacts", "PondsProductionCycles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Contacts", "ProductSalesOrders")]
        public EntityCollection<ProductSalesOrder> ProductSalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Contacts", "ProductSalesOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Contacts", "ProductSalesOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_Contacts", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CPLModel.FK_Tasks_Contacts", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CPLModel.FK_Tasks_Contacts", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ContactToUserLink_Contacts", "ContactToUserLink")]
        public EntityCollection<ContactToUserLink> ContactToUserLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactToUserLink>("CPLModel.FK_ContactToUserLink_Contacts", "ContactToUserLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactToUserLink>("CPLModel.FK_ContactToUserLink_Contacts", "ContactToUserLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ContactToUserLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactToUserLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactToUserLink object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static ContactToUserLink CreateContactToUserLink(global::System.Int32 contactID, global::System.String username)
        {
            ContactToUserLink contactToUserLink = new ContactToUserLink();
            contactToUserLink.ContactID = contactID;
            contactToUserLink.Username = username;
            return contactToUserLink;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false, "Username");
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ContactToUserLink_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ContactToUserLink_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ContactToUserLink_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ContactToUserLink_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CPLModel.FK_ContactToUserLink_Contacts", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="CumulativeFeedView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CumulativeFeedView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CumulativeFeedView object.
        /// </summary>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static CumulativeFeedView CreateCumulativeFeedView(global::System.Int32 productionCycleID)
        {
            CumulativeFeedView cumulativeFeedView = new CumulativeFeedView();
            cumulativeFeedView.ProductionCycleID = productionCycleID;
            return cumulativeFeedView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Cumulative_Feed
        {
            get
            {
                return _Cumulative_Feed;
            }
            set
            {
                OnCumulative_FeedChanging(value);
                ReportPropertyChanging("Cumulative_Feed");
                _Cumulative_Feed = StructuralObject.SetValidValue(value, "Cumulative_Feed");
                ReportPropertyChanged("Cumulative_Feed");
                OnCumulative_FeedChanged();
            }
        }
        private Nullable<global::System.Double> _Cumulative_Feed;
        partial void OnCumulative_FeedChanging(Nullable<global::System.Double> value);
        partial void OnCumulative_FeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="CurrencyRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyRate object.
        /// </summary>
        /// <param name="currencyRateID">Initial value of the CurrencyRateID property.</param>
        public static CurrencyRate CreateCurrencyRate(global::System.Int32 currencyRateID)
        {
            CurrencyRate currencyRate = new CurrencyRate();
            currencyRate.CurrencyRateID = currencyRateID;
            return currencyRate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyRateID
        {
            get
            {
                return _CurrencyRateID;
            }
            set
            {
                if (_CurrencyRateID != value)
                {
                    OnCurrencyRateIDChanging(value);
                    ReportPropertyChanging("CurrencyRateID");
                    _CurrencyRateID = StructuralObject.SetValidValue(value, "CurrencyRateID");
                    ReportPropertyChanged("CurrencyRateID");
                    OnCurrencyRateIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyRateID;
        partial void OnCurrencyRateIDChanging(global::System.Int32 value);
        partial void OnCurrencyRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyShortCode
        {
            get
            {
                return _CurrencyShortCode;
            }
            set
            {
                OnCurrencyShortCodeChanging(value);
                ReportPropertyChanging("CurrencyShortCode");
                _CurrencyShortCode = StructuralObject.SetValidValue(value, true, "CurrencyShortCode");
                ReportPropertyChanged("CurrencyShortCode");
                OnCurrencyShortCodeChanged();
            }
        }
        private global::System.String _CurrencyShortCode;
        partial void OnCurrencyShortCodeChanging(global::System.String value);
        partial void OnCurrencyShortCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SellRate
        {
            get
            {
                return _SellRate;
            }
            set
            {
                OnSellRateChanging(value);
                ReportPropertyChanging("SellRate");
                _SellRate = StructuralObject.SetValidValue(value, "SellRate");
                ReportPropertyChanged("SellRate");
                OnSellRateChanged();
            }
        }
        private Nullable<global::System.Double> _SellRate;
        partial void OnSellRateChanging(Nullable<global::System.Double> value);
        partial void OnSellRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PurchaseRate
        {
            get
            {
                return _PurchaseRate;
            }
            set
            {
                OnPurchaseRateChanging(value);
                ReportPropertyChanging("PurchaseRate");
                _PurchaseRate = StructuralObject.SetValidValue(value, "PurchaseRate");
                ReportPropertyChanged("PurchaseRate");
                OnPurchaseRateChanged();
            }
        }
        private Nullable<global::System.Double> _PurchaseRate;
        partial void OnPurchaseRateChanging(Nullable<global::System.Double> value);
        partial void OnPurchaseRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MiddleRate
        {
            get
            {
                return _MiddleRate;
            }
            set
            {
                OnMiddleRateChanging(value);
                ReportPropertyChanging("MiddleRate");
                _MiddleRate = StructuralObject.SetValidValue(value, "MiddleRate");
                ReportPropertyChanged("MiddleRate");
                OnMiddleRateChanged();
            }
        }
        private Nullable<global::System.Double> _MiddleRate;
        partial void OnMiddleRateChanging(Nullable<global::System.Double> value);
        partial void OnMiddleRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_CurrencyRate_MasterCurrency", "MasterCurrency")]
        public MasterCurrency MasterCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_CurrencyRate_MasterCurrency", "MasterCurrency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_CurrencyRate_MasterCurrency", "MasterCurrency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCurrency> MasterCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_CurrencyRate_MasterCurrency", "MasterCurrency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCurrency>("CPLModel.FK_CurrencyRate_MasterCurrency", "MasterCurrency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="CurrentActivePond")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrentActivePond : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrentActivePond object.
        /// </summary>
        /// <param name="pondID">Initial value of the PondID property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static CurrentActivePond CreateCurrentActivePond(global::System.Int32 pondID, global::System.Int32 productionCycleID)
        {
            CurrentActivePond currentActivePond = new CurrentActivePond();
            currentActivePond.PondID = pondID;
            currentActivePond.ProductionCycleID = productionCycleID;
            return currentActivePond;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                if (_PondID != value)
                {
                    OnPondIDChanging(value);
                    ReportPropertyChanging("PondID");
                    _PondID = StructuralObject.SetValidValue(value, "PondID");
                    ReportPropertyChanged("PondID");
                    OnPondIDChanged();
                }
            }
        }
        private global::System.Int32 _PondID;
        partial void OnPondIDChanging(global::System.Int32 value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PondDescription
        {
            get
            {
                return _PondDescription;
            }
            set
            {
                OnPondDescriptionChanging(value);
                ReportPropertyChanging("PondDescription");
                _PondDescription = StructuralObject.SetValidValue(value, true, "PondDescription");
                ReportPropertyChanged("PondDescription");
                OnPondDescriptionChanged();
            }
        }
        private global::System.String _PondDescription;
        partial void OnPondDescriptionChanging(global::System.String value);
        partial void OnPondDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfFry
        {
            get
            {
                return _NumberOfFry;
            }
            set
            {
                OnNumberOfFryChanging(value);
                ReportPropertyChanging("NumberOfFry");
                _NumberOfFry = StructuralObject.SetValidValue(value, "NumberOfFry");
                ReportPropertyChanged("NumberOfFry");
                OnNumberOfFryChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfFry;
        partial void OnNumberOfFryChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfFryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DOC
        {
            get
            {
                return _DOC;
            }
            set
            {
                OnDOCChanging(value);
                ReportPropertyChanging("DOC");
                _DOC = StructuralObject.SetValidValue(value, "DOC");
                ReportPropertyChanged("DOC");
                OnDOCChanged();
            }
        }
        private Nullable<global::System.Int32> _DOC;
        partial void OnDOCChanging(Nullable<global::System.Int32> value);
        partial void OnDOCChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="DailyFeedSummaryView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyFeedSummaryView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyFeedSummaryView object.
        /// </summary>
        /// <param name="row">Initial value of the Row property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static DailyFeedSummaryView CreateDailyFeedSummaryView(global::System.Int64 row, global::System.Int32 productionCycleID)
        {
            DailyFeedSummaryView dailyFeedSummaryView = new DailyFeedSummaryView();
            dailyFeedSummaryView.Row = row;
            dailyFeedSummaryView.ProductionCycleID = productionCycleID;
            return dailyFeedSummaryView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Row
        {
            get
            {
                return _Row;
            }
            set
            {
                if (_Row != value)
                {
                    OnRowChanging(value);
                    ReportPropertyChanging("Row");
                    _Row = StructuralObject.SetValidValue(value, "Row");
                    ReportPropertyChanged("Row");
                    OnRowChanged();
                }
            }
        }
        private global::System.Int64 _Row;
        partial void OnRowChanging(global::System.Int64 value);
        partial void OnRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> feedPerDay
        {
            get
            {
                return _feedPerDay;
            }
            set
            {
                OnfeedPerDayChanging(value);
                ReportPropertyChanging("feedPerDay");
                _feedPerDay = StructuralObject.SetValidValue(value, "feedPerDay");
                ReportPropertyChanged("feedPerDay");
                OnfeedPerDayChanged();
            }
        }
        private Nullable<global::System.Double> _feedPerDay;
        partial void OnfeedPerDayChanging(Nullable<global::System.Double> value);
        partial void OnfeedPerDayChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="DeliveryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeliveryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeliveryLog object.
        /// </summary>
        /// <param name="deliveryLogID">Initial value of the DeliveryLogID property.</param>
        /// <param name="pODetailsID">Initial value of the PODetailsID property.</param>
        /// <param name="qtyReceived">Initial value of the qtyReceived property.</param>
        public static DeliveryLog CreateDeliveryLog(global::System.String deliveryLogID, global::System.Int32 pODetailsID, global::System.Double qtyReceived)
        {
            DeliveryLog deliveryLog = new DeliveryLog();
            deliveryLog.DeliveryLogID = deliveryLogID;
            deliveryLog.PODetailsID = pODetailsID;
            deliveryLog.qtyReceived = qtyReceived;
            return deliveryLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryLogID
        {
            get
            {
                return _DeliveryLogID;
            }
            set
            {
                if (_DeliveryLogID != value)
                {
                    OnDeliveryLogIDChanging(value);
                    ReportPropertyChanging("DeliveryLogID");
                    _DeliveryLogID = StructuralObject.SetValidValue(value, false, "DeliveryLogID");
                    ReportPropertyChanged("DeliveryLogID");
                    OnDeliveryLogIDChanged();
                }
            }
        }
        private global::System.String _DeliveryLogID;
        partial void OnDeliveryLogIDChanging(global::System.String value);
        partial void OnDeliveryLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PODetailsID
        {
            get
            {
                return _PODetailsID;
            }
            set
            {
                OnPODetailsIDChanging(value);
                ReportPropertyChanging("PODetailsID");
                _PODetailsID = StructuralObject.SetValidValue(value, "PODetailsID");
                ReportPropertyChanged("PODetailsID");
                OnPODetailsIDChanged();
            }
        }
        private global::System.Int32 _PODetailsID;
        partial void OnPODetailsIDChanging(global::System.Int32 value);
        partial void OnPODetailsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double qtyReceived
        {
            get
            {
                return _qtyReceived;
            }
            set
            {
                OnqtyReceivedChanging(value);
                ReportPropertyChanging("qtyReceived");
                _qtyReceived = StructuralObject.SetValidValue(value, "qtyReceived");
                ReportPropertyChanged("qtyReceived");
                OnqtyReceivedChanged();
            }
        }
        private global::System.Double _qtyReceived;
        partial void OnqtyReceivedChanging(global::System.Double value);
        partial void OnqtyReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value, "DeliveryDate");
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeliveryDate;
        partial void OnDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryNote
        {
            get
            {
                return _DeliveryNote;
            }
            set
            {
                OnDeliveryNoteChanging(value);
                ReportPropertyChanging("DeliveryNote");
                _DeliveryNote = StructuralObject.SetValidValue(value, true, "DeliveryNote");
                ReportPropertyChanged("DeliveryNote");
                OnDeliveryNoteChanged();
            }
        }
        private global::System.String _DeliveryNote;
        partial void OnDeliveryNoteChanging(global::System.String value);
        partial void OnDeliveryNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryBatch
        {
            get
            {
                return _DeliveryBatch;
            }
            set
            {
                OnDeliveryBatchChanging(value);
                ReportPropertyChanging("DeliveryBatch");
                _DeliveryBatch = StructuralObject.SetValidValue(value, true, "DeliveryBatch");
                ReportPropertyChanged("DeliveryBatch");
                OnDeliveryBatchChanged();
            }
        }
        private global::System.String _DeliveryBatch;
        partial void OnDeliveryBatchChanging(global::System.String value);
        partial void OnDeliveryBatchChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchHeader_DeliveryLog", "BatchHeader")]
        public EntityCollection<BatchHeader> BatchHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchHeader>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "BatchHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchHeader>("CPLModel.FK_dbo_BatchHeader_DeliveryLog", "BatchHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_DeliveryLog_PODetails", "PODetail")]
        public PODetail PODetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_DeliveryLog_PODetails", "PODetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_DeliveryLog_PODetails", "PODetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PODetail> PODetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PODetail>("CPLModel.FK_DeliveryLog_PODetails", "PODetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PODetail>("CPLModel.FK_DeliveryLog_PODetails", "PODetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_DeliveryLog_products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_DeliveryLog_products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_DeliveryLog_products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_DeliveryLog_products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_DeliveryLog_products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="EmployeeNameView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeNameView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeNameView object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static EmployeeNameView CreateEmployeeNameView(global::System.Int32 contactID)
        {
            EmployeeNameView employeeNameView = new EmployeeNameView();
            employeeNameView.ContactID = contactID;
            return employeeNameView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Facility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Facility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Facility object.
        /// </summary>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="facilityName">Initial value of the FacilityName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Facility CreateFacility(global::System.Int32 facilityId, global::System.String facilityName, global::System.String address)
        {
            Facility facility = new Facility();
            facility.FacilityId = facilityId;
            facility.FacilityName = facilityName;
            facility.Address = address;
            return facility;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                if (_FacilityId != value)
                {
                    OnFacilityIdChanging(value);
                    ReportPropertyChanging("FacilityId");
                    _FacilityId = StructuralObject.SetValidValue(value, "FacilityId");
                    ReportPropertyChanged("FacilityId");
                    OnFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacilityName
        {
            get
            {
                return _FacilityName;
            }
            set
            {
                OnFacilityNameChanging(value);
                ReportPropertyChanging("FacilityName");
                _FacilityName = StructuralObject.SetValidValue(value, false, "FacilityName");
                ReportPropertyChanged("FacilityName");
                OnFacilityNameChanged();
            }
        }
        private global::System.String _FacilityName;
        partial void OnFacilityNameChanging(global::System.String value);
        partial void OnFacilityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true, "ContactPerson");
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value, "EntryDate");
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Facilities_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CPLModel.FK_Facilities_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CPLModel.FK_Facilities_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CPLModel.FK_Facilities_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("CPLModel.FK_Facilities_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseOrders_Facilities", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CPLModel.FK_PurchaseOrders_Facilities", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CPLModel.FK_PurchaseOrders_Facilities", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchHeader_Facilities", "BatchHeader")]
        public EntityCollection<BatchHeader> BatchHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchHeader>("CPLModel.FK_BatchHeader_Facilities", "BatchHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchHeader>("CPLModel.FK_BatchHeader_Facilities", "BatchHeader", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="FeedingLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedingLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedingLog object.
        /// </summary>
        /// <param name="feedLogID">Initial value of the FeedLogID property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static FeedingLog CreateFeedingLog(global::System.Int32 feedLogID, global::System.Int32 productionCycleID)
        {
            FeedingLog feedingLog = new FeedingLog();
            feedingLog.FeedLogID = feedLogID;
            feedingLog.ProductionCycleID = productionCycleID;
            return feedingLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeedLogID
        {
            get
            {
                return _FeedLogID;
            }
            set
            {
                if (_FeedLogID != value)
                {
                    OnFeedLogIDChanging(value);
                    ReportPropertyChanging("FeedLogID");
                    _FeedLogID = StructuralObject.SetValidValue(value, "FeedLogID");
                    ReportPropertyChanged("FeedLogID");
                    OnFeedLogIDChanged();
                }
            }
        }
        private global::System.Int32 _FeedLogID;
        partial void OnFeedLogIDChanging(global::System.Int32 value);
        partial void OnFeedLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value, "LogDate");
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogDate;
        partial void OnLogDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> waterLevel
        {
            get
            {
                return _waterLevel;
            }
            set
            {
                OnwaterLevelChanging(value);
                ReportPropertyChanging("waterLevel");
                _waterLevel = StructuralObject.SetValidValue(value, "waterLevel");
                ReportPropertyChanged("waterLevel");
                OnwaterLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _waterLevel;
        partial void OnwaterLevelChanging(Nullable<global::System.Int32> value);
        partial void OnwaterLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> feedGiven
        {
            get
            {
                return _feedGiven;
            }
            set
            {
                OnfeedGivenChanging(value);
                ReportPropertyChanging("feedGiven");
                _feedGiven = StructuralObject.SetValidValue(value, "feedGiven");
                ReportPropertyChanged("feedGiven");
                OnfeedGivenChanged();
            }
        }
        private Nullable<global::System.Double> _feedGiven;
        partial void OnfeedGivenChanging(Nullable<global::System.Double> value);
        partial void OnfeedGivenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String feedType
        {
            get
            {
                return _feedType;
            }
            set
            {
                OnfeedTypeChanging(value);
                ReportPropertyChanging("feedType");
                _feedType = StructuralObject.SetValidValue(value, true, "feedType");
                ReportPropertyChanged("feedType");
                OnfeedTypeChanged();
            }
        }
        private global::System.String _feedType;
        partial void OnfeedTypeChanging(global::System.String value);
        partial void OnfeedTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> feedPerDay
        {
            get
            {
                return _feedPerDay;
            }
            set
            {
                OnfeedPerDayChanging(value);
                ReportPropertyChanging("feedPerDay");
                _feedPerDay = StructuralObject.SetValidValue(value, "feedPerDay");
                ReportPropertyChanged("feedPerDay");
                OnfeedPerDayChanged();
            }
        }
        private Nullable<global::System.Double> _feedPerDay;
        partial void OnfeedPerDayChanging(Nullable<global::System.Double> value);
        partial void OnfeedPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CummulativeFeed
        {
            get
            {
                return _CummulativeFeed;
            }
            set
            {
                OnCummulativeFeedChanging(value);
                ReportPropertyChanging("CummulativeFeed");
                _CummulativeFeed = StructuralObject.SetValidValue(value, "CummulativeFeed");
                ReportPropertyChanged("CummulativeFeed");
                OnCummulativeFeedChanged();
            }
        }
        private Nullable<global::System.Double> _CummulativeFeed;
        partial void OnCummulativeFeedChanging(Nullable<global::System.Double> value);
        partial void OnCummulativeFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "PondsProductionCycles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_FeedingLogs_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_FeedingLogs_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_FeedingLogs_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_FeedingLogs_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_FeedingLogs_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="FRGuide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FRGuide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FRGuide object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="mBW">Initial value of the MBW property.</param>
        public static FRGuide CreateFRGuide(global::System.Int32 id, global::System.Decimal mBW)
        {
            FRGuide fRGuide = new FRGuide();
            fRGuide.ID = id;
            fRGuide.MBW = mBW;
            return fRGuide;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MBW
        {
            get
            {
                return _MBW;
            }
            set
            {
                OnMBWChanging(value);
                ReportPropertyChanging("MBW");
                _MBW = StructuralObject.SetValidValue(value, "MBW");
                ReportPropertyChanged("MBW");
                OnMBWChanged();
            }
        }
        private global::System.Decimal _MBW;
        partial void OnMBWChanging(global::System.Decimal value);
        partial void OnMBWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FR
        {
            get
            {
                return _FR;
            }
            set
            {
                OnFRChanging(value);
                ReportPropertyChanging("FR");
                _FR = StructuralObject.SetValidValue(value, "FR");
                ReportPropertyChanged("FR");
                OnFRChanged();
            }
        }
        private Nullable<global::System.Decimal> _FR;
        partial void OnFRChanging(Nullable<global::System.Decimal> value);
        partial void OnFRChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Harvest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Harvest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Harvest object.
        /// </summary>
        /// <param name="harvestID">Initial value of the HarvestID property.</param>
        /// <param name="pondID">Initial value of the PondID property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static Harvest CreateHarvest(global::System.Int32 harvestID, global::System.Int32 pondID, global::System.Int32 productionCycleID)
        {
            Harvest harvest = new Harvest();
            harvest.HarvestID = harvestID;
            harvest.PondID = pondID;
            harvest.ProductionCycleID = productionCycleID;
            return harvest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HarvestID
        {
            get
            {
                return _HarvestID;
            }
            set
            {
                if (_HarvestID != value)
                {
                    OnHarvestIDChanging(value);
                    ReportPropertyChanging("HarvestID");
                    _HarvestID = StructuralObject.SetValidValue(value, "HarvestID");
                    ReportPropertyChanged("HarvestID");
                    OnHarvestIDChanged();
                }
            }
        }
        private global::System.Int32 _HarvestID;
        partial void OnHarvestIDChanging(global::System.Int32 value);
        partial void OnHarvestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                OnPondIDChanging(value);
                ReportPropertyChanging("PondID");
                _PondID = StructuralObject.SetValidValue(value, "PondID");
                ReportPropertyChanged("PondID");
                OnPondIDChanged();
            }
        }
        private global::System.Int32 _PondID;
        partial void OnPondIDChanging(global::System.Int32 value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HarvestDate
        {
            get
            {
                return _HarvestDate;
            }
            set
            {
                OnHarvestDateChanging(value);
                ReportPropertyChanging("HarvestDate");
                _HarvestDate = StructuralObject.SetValidValue(value, "HarvestDate");
                ReportPropertyChanged("HarvestDate");
                OnHarvestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HarvestDate;
        partial void OnHarvestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHarvestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, "Size");
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Double> _Size;
        partial void OnSizeChanging(Nullable<global::System.Double> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isFinalHarvest
        {
            get
            {
                return _isFinalHarvest;
            }
            set
            {
                OnisFinalHarvestChanging(value);
                ReportPropertyChanging("isFinalHarvest");
                _isFinalHarvest = StructuralObject.SetValidValue(value, "isFinalHarvest");
                ReportPropertyChanged("isFinalHarvest");
                OnisFinalHarvestChanged();
            }
        }
        private Nullable<global::System.Boolean> _isFinalHarvest;
        partial void OnisFinalHarvestChanging(Nullable<global::System.Boolean> value);
        partial void OnisFinalHarvestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value, "Month");
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _Month;
        partial void OnMonthChanging(Nullable<global::System.Int32> value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HarvestedPopulation
        {
            get
            {
                return _HarvestedPopulation;
            }
            set
            {
                OnHarvestedPopulationChanging(value);
                ReportPropertyChanging("HarvestedPopulation");
                _HarvestedPopulation = StructuralObject.SetValidValue(value, "HarvestedPopulation");
                ReportPropertyChanged("HarvestedPopulation");
                OnHarvestedPopulationChanged();
            }
        }
        private Nullable<global::System.Double> _HarvestedPopulation;
        partial void OnHarvestedPopulationChanging(Nullable<global::System.Double> value);
        partial void OnHarvestedPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> NumberOfFry
        {
            get
            {
                return _NumberOfFry;
            }
            set
            {
                OnNumberOfFryChanging(value);
                ReportPropertyChanging("NumberOfFry");
                _NumberOfFry = StructuralObject.SetValidValue(value, "NumberOfFry");
                ReportPropertyChanged("NumberOfFry");
                OnNumberOfFryChanged();
            }
        }
        private Nullable<global::System.Double> _NumberOfFry;
        partial void OnNumberOfFryChanging(Nullable<global::System.Double> value);
        partial void OnNumberOfFryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PopulationLeft
        {
            get
            {
                return _PopulationLeft;
            }
            set
            {
                OnPopulationLeftChanging(value);
                ReportPropertyChanging("PopulationLeft");
                _PopulationLeft = StructuralObject.SetValidValue(value, "PopulationLeft");
                ReportPropertyChanged("PopulationLeft");
                OnPopulationLeftChanged();
            }
        }
        private Nullable<global::System.Double> _PopulationLeft;
        partial void OnPopulationLeftChanging(Nullable<global::System.Double> value);
        partial void OnPopulationLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="MasterCurrency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterCurrency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterCurrency object.
        /// </summary>
        /// <param name="currencyShortName">Initial value of the CurrencyShortName property.</param>
        public static MasterCurrency CreateMasterCurrency(global::System.String currencyShortName)
        {
            MasterCurrency masterCurrency = new MasterCurrency();
            masterCurrency.CurrencyShortName = currencyShortName;
            return masterCurrency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyName
        {
            get
            {
                return _CurrencyName;
            }
            set
            {
                OnCurrencyNameChanging(value);
                ReportPropertyChanging("CurrencyName");
                _CurrencyName = StructuralObject.SetValidValue(value, true, "CurrencyName");
                ReportPropertyChanged("CurrencyName");
                OnCurrencyNameChanged();
            }
        }
        private global::System.String _CurrencyName;
        partial void OnCurrencyNameChanging(global::System.String value);
        partial void OnCurrencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCulture
        {
            get
            {
                return _CurrencyCulture;
            }
            set
            {
                OnCurrencyCultureChanging(value);
                ReportPropertyChanging("CurrencyCulture");
                _CurrencyCulture = StructuralObject.SetValidValue(value, true, "CurrencyCulture");
                ReportPropertyChanged("CurrencyCulture");
                OnCurrencyCultureChanged();
            }
        }
        private global::System.String _CurrencyCulture;
        partial void OnCurrencyCultureChanging(global::System.String value);
        partial void OnCurrencyCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyShortName
        {
            get
            {
                return _CurrencyShortName;
            }
            set
            {
                if (_CurrencyShortName != value)
                {
                    OnCurrencyShortNameChanging(value);
                    ReportPropertyChanging("CurrencyShortName");
                    _CurrencyShortName = StructuralObject.SetValidValue(value, false, "CurrencyShortName");
                    ReportPropertyChanged("CurrencyShortName");
                    OnCurrencyShortNameChanged();
                }
            }
        }
        private global::System.String _CurrencyShortName;
        partial void OnCurrencyShortNameChanging(global::System.String value);
        partial void OnCurrencyShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isDefault
        {
            get
            {
                return _isDefault;
            }
            set
            {
                OnisDefaultChanging(value);
                ReportPropertyChanging("isDefault");
                _isDefault = StructuralObject.SetValidValue(value, "isDefault");
                ReportPropertyChanged("isDefault");
                OnisDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _isDefault;
        partial void OnisDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnisDefaultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_CurrencyRate_MasterCurrency", "CurrencyRate")]
        public EntityCollection<CurrencyRate> CurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CurrencyRate>("CPLModel.FK_CurrencyRate_MasterCurrency", "CurrencyRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CurrencyRate>("CPLModel.FK_CurrencyRate_MasterCurrency", "CurrencyRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_MasterCurrency_CurrencyShortCode", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "PurchaseOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="MasterTax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterTax : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterTax object.
        /// </summary>
        /// <param name="taxID">Initial value of the TaxID property.</param>
        public static MasterTax CreateMasterTax(global::System.Int32 taxID)
        {
            MasterTax masterTax = new MasterTax();
            masterTax.TaxID = taxID;
            return masterTax;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                if (_TaxID != value)
                {
                    OnTaxIDChanging(value);
                    ReportPropertyChanging("TaxID");
                    _TaxID = StructuralObject.SetValidValue(value, "TaxID");
                    ReportPropertyChanged("TaxID");
                    OnTaxIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxID;
        partial void OnTaxIDChanging(global::System.Int32 value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxDescription
        {
            get
            {
                return _TaxDescription;
            }
            set
            {
                OnTaxDescriptionChanging(value);
                ReportPropertyChanging("TaxDescription");
                _TaxDescription = StructuralObject.SetValidValue(value, true, "TaxDescription");
                ReportPropertyChanged("TaxDescription");
                OnTaxDescriptionChanged();
            }
        }
        private global::System.String _TaxDescription;
        partial void OnTaxDescriptionChanging(global::System.String value);
        partial void OnTaxDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value, "TaxRate");
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxRate;
        partial void OnTaxRateChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseTaxTransactions_MasterTax", "PurchaseTaxTransaction")]
        public EntityCollection<PurchaseTaxTransaction> PurchaseTaxTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseTaxTransaction>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "PurchaseTaxTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseTaxTransaction>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "PurchaseTaxTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PDOControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PDOControl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PDOControl object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PDOControl CreatePDOControl(global::System.Int32 id)
        {
            PDOControl pDOControl = new PDOControl();
            pDOControl.ID = id;
            return pDOControl;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoPDO
        {
            get
            {
                return _NoPDO;
            }
            set
            {
                OnNoPDOChanging(value);
                ReportPropertyChanging("NoPDO");
                _NoPDO = StructuralObject.SetValidValue(value, true, "NoPDO");
                ReportPropertyChanged("NoPDO");
                OnNoPDOChanged();
            }
        }
        private global::System.String _NoPDO;
        partial void OnNoPDOChanging(global::System.String value);
        partial void OnNoPDOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InventoryID
        {
            get
            {
                return _InventoryID;
            }
            set
            {
                OnInventoryIDChanging(value);
                ReportPropertyChanging("InventoryID");
                _InventoryID = StructuralObject.SetValidValue(value, true, "InventoryID");
                ReportPropertyChanged("InventoryID");
                OnInventoryIDChanged();
            }
        }
        private global::System.String _InventoryID;
        partial void OnInventoryIDChanging(global::System.String value);
        partial void OnInventoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InventoryName
        {
            get
            {
                return _InventoryName;
            }
            set
            {
                OnInventoryNameChanging(value);
                ReportPropertyChanging("InventoryName");
                _InventoryName = StructuralObject.SetValidValue(value, true, "InventoryName");
                ReportPropertyChanged("InventoryName");
                OnInventoryNameChanged();
            }
        }
        private global::System.String _InventoryName;
        partial void OnInventoryNameChanging(global::System.String value);
        partial void OnInventoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> OrderedQuantity
        {
            get
            {
                return _OrderedQuantity;
            }
            set
            {
                OnOrderedQuantityChanging(value);
                ReportPropertyChanging("OrderedQuantity");
                _OrderedQuantity = StructuralObject.SetValidValue(value, "OrderedQuantity");
                ReportPropertyChanged("OrderedQuantity");
                OnOrderedQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _OrderedQuantity;
        partial void OnOrderedQuantityChanging(Nullable<global::System.Single> value);
        partial void OnOrderedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UOM
        {
            get
            {
                return _UOM;
            }
            set
            {
                OnUOMChanging(value);
                ReportPropertyChanging("UOM");
                _UOM = StructuralObject.SetValidValue(value, true, "UOM");
                ReportPropertyChanged("UOM");
                OnUOMChanged();
            }
        }
        private global::System.String _UOM;
        partial void OnUOMChanging(global::System.String value);
        partial void OnUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BuyPrice
        {
            get
            {
                return _BuyPrice;
            }
            set
            {
                OnBuyPriceChanging(value);
                ReportPropertyChanging("BuyPrice");
                _BuyPrice = StructuralObject.SetValidValue(value, "BuyPrice");
                ReportPropertyChanged("BuyPrice");
                OnBuyPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BuyPrice;
        partial void OnBuyPriceChanging(Nullable<global::System.Single> value);
        partial void OnBuyPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isOrdered
        {
            get
            {
                return _isOrdered;
            }
            set
            {
                OnisOrderedChanging(value);
                ReportPropertyChanging("isOrdered");
                _isOrdered = StructuralObject.SetValidValue(value, "isOrdered");
                ReportPropertyChanged("isOrdered");
                OnisOrderedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isOrdered;
        partial void OnisOrderedChanging(Nullable<global::System.Boolean> value);
        partial void OnisOrderedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPaid
        {
            get
            {
                return _isPaid;
            }
            set
            {
                OnisPaidChanging(value);
                ReportPropertyChanging("isPaid");
                _isPaid = StructuralObject.SetValidValue(value, "isPaid");
                ReportPropertyChanged("isPaid");
                OnisPaidChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPaid;
        partial void OnisPaidChanging(Nullable<global::System.Boolean> value);
        partial void OnisPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isClosed
        {
            get
            {
                return _isClosed;
            }
            set
            {
                OnisClosedChanging(value);
                ReportPropertyChanging("isClosed");
                _isClosed = StructuralObject.SetValidValue(value, "isClosed");
                ReportPropertyChanged("isClosed");
                OnisClosedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isClosed;
        partial void OnisClosedChanging(Nullable<global::System.Boolean> value);
        partial void OnisClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ReceivedQuantity
        {
            get
            {
                return _ReceivedQuantity;
            }
            set
            {
                OnReceivedQuantityChanging(value);
                ReportPropertyChanging("ReceivedQuantity");
                _ReceivedQuantity = StructuralObject.SetValidValue(value, "ReceivedQuantity");
                ReportPropertyChanged("ReceivedQuantity");
                OnReceivedQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _ReceivedQuantity;
        partial void OnReceivedQuantityChanging(Nullable<global::System.Single> value);
        partial void OnReceivedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceivedNotes
        {
            get
            {
                return _ReceivedNotes;
            }
            set
            {
                OnReceivedNotesChanging(value);
                ReportPropertyChanging("ReceivedNotes");
                _ReceivedNotes = StructuralObject.SetValidValue(value, true, "ReceivedNotes");
                ReportPropertyChanged("ReceivedNotes");
                OnReceivedNotesChanged();
            }
        }
        private global::System.String _ReceivedNotes;
        partial void OnReceivedNotesChanging(global::System.String value);
        partial void OnReceivedNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountingNotes
        {
            get
            {
                return _AccountingNotes;
            }
            set
            {
                OnAccountingNotesChanging(value);
                ReportPropertyChanging("AccountingNotes");
                _AccountingNotes = StructuralObject.SetValidValue(value, true, "AccountingNotes");
                ReportPropertyChanged("AccountingNotes");
                OnAccountingNotesChanged();
            }
        }
        private global::System.String _AccountingNotes;
        partial void OnAccountingNotesChanging(global::System.String value);
        partial void OnAccountingNotesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PODeliveredQuantity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PODeliveredQuantity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PODeliveredQuantity object.
        /// </summary>
        /// <param name="pOID">Initial value of the POID property.</param>
        /// <param name="pODetailsID">Initial value of the PODetailsID property.</param>
        /// <param name="qtyReceived">Initial value of the qtyReceived property.</param>
        public static PODeliveredQuantity CreatePODeliveredQuantity(global::System.String pOID, global::System.Int32 pODetailsID, global::System.Double qtyReceived)
        {
            PODeliveredQuantity pODeliveredQuantity = new PODeliveredQuantity();
            pODeliveredQuantity.POID = pOID;
            pODeliveredQuantity.PODetailsID = pODetailsID;
            pODeliveredQuantity.qtyReceived = qtyReceived;
            return pODeliveredQuantity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String POID
        {
            get
            {
                return _POID;
            }
            set
            {
                if (_POID != value)
                {
                    OnPOIDChanging(value);
                    ReportPropertyChanging("POID");
                    _POID = StructuralObject.SetValidValue(value, false, "POID");
                    ReportPropertyChanged("POID");
                    OnPOIDChanged();
                }
            }
        }
        private global::System.String _POID;
        partial void OnPOIDChanging(global::System.String value);
        partial void OnPOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PODetailsID
        {
            get
            {
                return _PODetailsID;
            }
            set
            {
                if (_PODetailsID != value)
                {
                    OnPODetailsIDChanging(value);
                    ReportPropertyChanging("PODetailsID");
                    _PODetailsID = StructuralObject.SetValidValue(value, "PODetailsID");
                    ReportPropertyChanged("PODetailsID");
                    OnPODetailsIDChanged();
                }
            }
        }
        private global::System.Int32 _PODetailsID;
        partial void OnPODetailsIDChanging(global::System.Int32 value);
        partial void OnPODetailsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double qtyReceived
        {
            get
            {
                return _qtyReceived;
            }
            set
            {
                if (_qtyReceived != value)
                {
                    OnqtyReceivedChanging(value);
                    ReportPropertyChanging("qtyReceived");
                    _qtyReceived = StructuralObject.SetValidValue(value, "qtyReceived");
                    ReportPropertyChanged("qtyReceived");
                    OnqtyReceivedChanged();
                }
            }
        }
        private global::System.Double _qtyReceived;
        partial void OnqtyReceivedChanging(global::System.Double value);
        partial void OnqtyReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryBatch
        {
            get
            {
                return _DeliveryBatch;
            }
            set
            {
                OnDeliveryBatchChanging(value);
                ReportPropertyChanging("DeliveryBatch");
                _DeliveryBatch = StructuralObject.SetValidValue(value, true, "DeliveryBatch");
                ReportPropertyChanged("DeliveryBatch");
                OnDeliveryBatchChanged();
            }
        }
        private global::System.String _DeliveryBatch;
        partial void OnDeliveryBatchChanging(global::System.String value);
        partial void OnDeliveryBatchChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PODetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PODetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PODetail object.
        /// </summary>
        /// <param name="pODetailsID">Initial value of the PODetailsID property.</param>
        /// <param name="pOID">Initial value of the POID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static PODetail CreatePODetail(global::System.Int32 pODetailsID, global::System.String pOID, global::System.Int32 productID)
        {
            PODetail pODetail = new PODetail();
            pODetail.PODetailsID = pODetailsID;
            pODetail.POID = pOID;
            pODetail.ProductID = productID;
            return pODetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PODetailsID
        {
            get
            {
                return _PODetailsID;
            }
            set
            {
                if (_PODetailsID != value)
                {
                    OnPODetailsIDChanging(value);
                    ReportPropertyChanging("PODetailsID");
                    _PODetailsID = StructuralObject.SetValidValue(value, "PODetailsID");
                    ReportPropertyChanged("PODetailsID");
                    OnPODetailsIDChanged();
                }
            }
        }
        private global::System.Int32 _PODetailsID;
        partial void OnPODetailsIDChanging(global::System.Int32 value);
        partial void OnPODetailsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String POID
        {
            get
            {
                return _POID;
            }
            set
            {
                OnPOIDChanging(value);
                ReportPropertyChanging("POID");
                _POID = StructuralObject.SetValidValue(value, false, "POID");
                ReportPropertyChanged("POID");
                OnPOIDChanged();
            }
        }
        private global::System.String _POID;
        partial void OnPOIDChanging(global::System.String value);
        partial void OnPOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> qty
        {
            get
            {
                return _qty;
            }
            set
            {
                OnqtyChanging(value);
                ReportPropertyChanging("qty");
                _qty = StructuralObject.SetValidValue(value, "qty");
                ReportPropertyChanged("qty");
                OnqtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _qty;
        partial void OnqtyChanging(Nullable<global::System.Decimal> value);
        partial void OnqtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value, "UnitPrice");
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PODetails_products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PODetails_products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PODetails_products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PODetails_products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_PODetails_products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PODetails_PurchaseOrders", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CPLModel.FK_PODetails_PurchaseOrders", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CPLModel.FK_PODetails_PurchaseOrders", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CPLModel.FK_PODetails_PurchaseOrders", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("CPLModel.FK_PODetails_PurchaseOrders", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchHeader_PODetailID", "BatchHeader")]
        public EntityCollection<BatchHeader> BatchHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchHeader>("CPLModel.FK_dbo_BatchHeader_PODetailID", "BatchHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchHeader>("CPLModel.FK_dbo_BatchHeader_PODetailID", "BatchHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_DeliveryLog_PODetails", "DeliveryLog")]
        public EntityCollection<DeliveryLog> DeliveryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeliveryLog>("CPLModel.FK_DeliveryLog_PODetails", "DeliveryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeliveryLog>("CPLModel.FK_DeliveryLog_PODetails", "DeliveryLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PODetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PODetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PODetailsView object.
        /// </summary>
        /// <param name="pODetailsID">Initial value of the PODetailsID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="pOID">Initial value of the POID property.</param>
        public static PODetailsView CreatePODetailsView(global::System.Int32 pODetailsID, global::System.Int32 productID, global::System.String pOID)
        {
            PODetailsView pODetailsView = new PODetailsView();
            pODetailsView.PODetailsID = pODetailsID;
            pODetailsView.ProductID = productID;
            pODetailsView.POID = pOID;
            return pODetailsView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PODetailsID
        {
            get
            {
                return _PODetailsID;
            }
            set
            {
                if (_PODetailsID != value)
                {
                    OnPODetailsIDChanging(value);
                    ReportPropertyChanging("PODetailsID");
                    _PODetailsID = StructuralObject.SetValidValue(value, "PODetailsID");
                    ReportPropertyChanged("PODetailsID");
                    OnPODetailsIDChanged();
                }
            }
        }
        private global::System.Int32 _PODetailsID;
        partial void OnPODetailsIDChanging(global::System.Int32 value);
        partial void OnPODetailsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> qty
        {
            get
            {
                return _qty;
            }
            set
            {
                OnqtyChanging(value);
                ReportPropertyChanging("qty");
                _qty = StructuralObject.SetValidValue(value, "qty");
                ReportPropertyChanged("qty");
                OnqtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _qty;
        partial void OnqtyChanging(Nullable<global::System.Decimal> value);
        partial void OnqtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Uom
        {
            get
            {
                return _Uom;
            }
            set
            {
                OnUomChanging(value);
                ReportPropertyChanging("Uom");
                _Uom = StructuralObject.SetValidValue(value, true, "Uom");
                ReportPropertyChanged("Uom");
                OnUomChanged();
            }
        }
        private global::System.String _Uom;
        partial void OnUomChanging(global::System.String value);
        partial void OnUomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true, "Currency");
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value, "UnitPrice");
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String POID
        {
            get
            {
                return _POID;
            }
            set
            {
                if (_POID != value)
                {
                    OnPOIDChanging(value);
                    ReportPropertyChanging("POID");
                    _POID = StructuralObject.SetValidValue(value, false, "POID");
                    ReportPropertyChanged("POID");
                    OnPOIDChanged();
                }
            }
        }
        private global::System.String _POID;
        partial void OnPOIDChanging(global::System.String value);
        partial void OnPOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ConvertedUnitPrice
        {
            get
            {
                return _ConvertedUnitPrice;
            }
            set
            {
                OnConvertedUnitPriceChanging(value);
                ReportPropertyChanging("ConvertedUnitPrice");
                _ConvertedUnitPrice = StructuralObject.SetValidValue(value, "ConvertedUnitPrice");
                ReportPropertyChanged("ConvertedUnitPrice");
                OnConvertedUnitPriceChanged();
            }
        }
        private Nullable<global::System.Double> _ConvertedUnitPrice;
        partial void OnConvertedUnitPriceChanging(Nullable<global::System.Double> value);
        partial void OnConvertedUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ConvertedTotal
        {
            get
            {
                return _ConvertedTotal;
            }
            set
            {
                OnConvertedTotalChanging(value);
                ReportPropertyChanging("ConvertedTotal");
                _ConvertedTotal = StructuralObject.SetValidValue(value, "ConvertedTotal");
                ReportPropertyChanged("ConvertedTotal");
                OnConvertedTotalChanged();
            }
        }
        private Nullable<global::System.Double> _ConvertedTotal;
        partial void OnConvertedTotalChanging(Nullable<global::System.Double> value);
        partial void OnConvertedTotalChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Pond")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pond : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pond object.
        /// </summary>
        /// <param name="pondID">Initial value of the PondID property.</param>
        public static Pond CreatePond(global::System.Int32 pondID)
        {
            Pond pond = new Pond();
            pond.PondID = pondID;
            return pond;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                if (_PondID != value)
                {
                    OnPondIDChanging(value);
                    ReportPropertyChanging("PondID");
                    _PondID = StructuralObject.SetValidValue(value, "PondID");
                    ReportPropertyChanged("PondID");
                    OnPondIDChanged();
                }
            }
        }
        private global::System.Int32 _PondID;
        partial void OnPondIDChanging(global::System.Int32 value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PondDescription
        {
            get
            {
                return _PondDescription;
            }
            set
            {
                OnPondDescriptionChanging(value);
                ReportPropertyChanging("PondDescription");
                _PondDescription = StructuralObject.SetValidValue(value, true, "PondDescription");
                ReportPropertyChanged("PondDescription");
                OnPondDescriptionChanged();
            }
        }
        private global::System.String _PondDescription;
        partial void OnPondDescriptionChanging(global::System.String value);
        partial void OnPondDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pondSize
        {
            get
            {
                return _pondSize;
            }
            set
            {
                OnpondSizeChanging(value);
                ReportPropertyChanging("pondSize");
                _pondSize = StructuralObject.SetValidValue(value, "pondSize");
                ReportPropertyChanged("pondSize");
                OnpondSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _pondSize;
        partial void OnpondSizeChanging(Nullable<global::System.Int32> value);
        partial void OnpondSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pondUOM
        {
            get
            {
                return _pondUOM;
            }
            set
            {
                OnpondUOMChanging(value);
                ReportPropertyChanging("pondUOM");
                _pondUOM = StructuralObject.SetValidValue(value, true, "pondUOM");
                ReportPropertyChanged("pondUOM");
                OnpondUOMChanged();
            }
        }
        private global::System.String _pondUOM;
        partial void OnpondUOMChanging(global::System.String value);
        partial void OnpondUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PondLocation
        {
            get
            {
                return _PondLocation;
            }
            set
            {
                OnPondLocationChanging(value);
                ReportPropertyChanging("PondLocation");
                _PondLocation = StructuralObject.SetValidValue(value, true, "PondLocation");
                ReportPropertyChanged("PondLocation");
                OnPondLocationChanged();
            }
        }
        private global::System.String _PondLocation;
        partial void OnPondLocationChanging(global::System.String value);
        partial void OnPondLocationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_Ponds", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CPLModel.FK_Tasks_Ponds", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CPLModel.FK_Tasks_Ponds", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_Ponds", "PondConsumptionsLog")]
        public EntityCollection<PondConsumptionsLog> PondConsumptionsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_Ponds", "PondConsumptionsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_Ponds", "PondConsumptionsLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PondConsumptionsLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PondConsumptionsLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PondConsumptionsLog object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        public static PondConsumptionsLog CreatePondConsumptionsLog(global::System.Int32 logID, global::System.Int32 productID, global::System.Double qty)
        {
            PondConsumptionsLog pondConsumptionsLog = new PondConsumptionsLog();
            pondConsumptionsLog.LogID = logID;
            pondConsumptionsLog.ProductID = productID;
            pondConsumptionsLog.Qty = qty;
            return pondConsumptionsLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value, "LogID");
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value, "Qty");
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Double _Qty;
        partial void OnQtyChanging(global::System.Double value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UOM
        {
            get
            {
                return _UOM;
            }
            set
            {
                OnUOMChanging(value);
                ReportPropertyChanging("UOM");
                _UOM = StructuralObject.SetValidValue(value, true, "UOM");
                ReportPropertyChanged("UOM");
                OnUOMChanged();
            }
        }
        private global::System.String _UOM;
        partial void OnUOMChanging(global::System.String value);
        partial void OnUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value, "LogDate");
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogDate;
        partial void OnLogDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, true, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.String _userId;
        partial void OnuserIdChanging(global::System.String value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                OnPondIDChanging(value);
                ReportPropertyChanging("PondID");
                _PondID = StructuralObject.SetValidValue(value, "PondID");
                ReportPropertyChanged("PondID");
                OnPondIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PondID;
        partial void OnPondIDChanging(Nullable<global::System.Int32> value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionCycleID;
        partial void OnProductionCycleIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductGroupID
        {
            get
            {
                return _ProductGroupID;
            }
            set
            {
                OnProductGroupIDChanging(value);
                ReportPropertyChanging("ProductGroupID");
                _ProductGroupID = StructuralObject.SetValidValue(value, "ProductGroupID");
                ReportPropertyChanged("ProductGroupID");
                OnProductGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductGroupID;
        partial void OnProductGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BuyPrice
        {
            get
            {
                return _BuyPrice;
            }
            set
            {
                OnBuyPriceChanging(value);
                ReportPropertyChanging("BuyPrice");
                _BuyPrice = StructuralObject.SetValidValue(value, "BuyPrice");
                ReportPropertyChanged("BuyPrice");
                OnBuyPriceChanged();
            }
        }
        private Nullable<global::System.Double> _BuyPrice;
        partial void OnBuyPriceChanging(Nullable<global::System.Double> value);
        partial void OnBuyPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BatchHeaderID
        {
            get
            {
                return _BatchHeaderID;
            }
            set
            {
                OnBatchHeaderIDChanging(value);
                ReportPropertyChanging("BatchHeaderID");
                _BatchHeaderID = StructuralObject.SetValidValue(value, "BatchHeaderID");
                ReportPropertyChanged("BatchHeaderID");
                OnBatchHeaderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BatchHeaderID;
        partial void OnBatchHeaderIDChanging(Nullable<global::System.Int32> value);
        partial void OnBatchHeaderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BatchDetailID
        {
            get
            {
                return _BatchDetailID;
            }
            set
            {
                OnBatchDetailIDChanging(value);
                ReportPropertyChanging("BatchDetailID");
                _BatchDetailID = StructuralObject.SetValidValue(value, "BatchDetailID");
                ReportPropertyChanged("BatchDetailID");
                OnBatchDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BatchDetailID;
        partial void OnBatchDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnBatchDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsumptionsBatchID
        {
            get
            {
                return _ConsumptionsBatchID;
            }
            set
            {
                OnConsumptionsBatchIDChanging(value);
                ReportPropertyChanging("ConsumptionsBatchID");
                _ConsumptionsBatchID = StructuralObject.SetValidValue(value, true, "ConsumptionsBatchID");
                ReportPropertyChanged("ConsumptionsBatchID");
                OnConsumptionsBatchIDChanged();
            }
        }
        private global::System.String _ConsumptionsBatchID;
        partial void OnConsumptionsBatchIDChanging(global::System.String value);
        partial void OnConsumptionsBatchIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_Ponds", "Pond")]
        public Pond Pond
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_PondConsumptionsLog_Ponds", "Pond").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_PondConsumptionsLog_Ponds", "Pond").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pond> PondReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_PondConsumptionsLog_Ponds", "Pond");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pond>("CPLModel.FK_PondConsumptionsLog_Ponds", "Pond", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondsProductionCycle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PondConsumptionsLog_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PondConsumptionsLog_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_PondConsumptionsLog_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_PondConsumptionsLog_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PondsProductionCycle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PondsProductionCycle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PondsProductionCycle object.
        /// </summary>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        /// <param name="pondID">Initial value of the PondID property.</param>
        public static PondsProductionCycle CreatePondsProductionCycle(global::System.Int32 productionCycleID, global::System.Int32 pondID)
        {
            PondsProductionCycle pondsProductionCycle = new PondsProductionCycle();
            pondsProductionCycle.ProductionCycleID = productionCycleID;
            pondsProductionCycle.PondID = pondID;
            return pondsProductionCycle;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isInProduction
        {
            get
            {
                return _isInProduction;
            }
            set
            {
                OnisInProductionChanging(value);
                ReportPropertyChanging("isInProduction");
                _isInProduction = StructuralObject.SetValidValue(value, "isInProduction");
                ReportPropertyChanged("isInProduction");
                OnisInProductionChanged();
            }
        }
        private Nullable<global::System.Boolean> _isInProduction;
        partial void OnisInProductionChanging(Nullable<global::System.Boolean> value);
        partial void OnisInProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                OnPondIDChanging(value);
                ReportPropertyChanging("PondID");
                _PondID = StructuralObject.SetValidValue(value, "PondID");
                ReportPropertyChanged("PondID");
                OnPondIDChanged();
            }
        }
        private global::System.Int32 _PondID;
        partial void OnPondIDChanging(global::System.Int32 value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FryOrigin
        {
            get
            {
                return _FryOrigin;
            }
            set
            {
                OnFryOriginChanging(value);
                ReportPropertyChanging("FryOrigin");
                _FryOrigin = StructuralObject.SetValidValue(value, true, "FryOrigin");
                ReportPropertyChanged("FryOrigin");
                OnFryOriginChanged();
            }
        }
        private global::System.String _FryOrigin;
        partial void OnFryOriginChanging(global::System.String value);
        partial void OnFryOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfFry
        {
            get
            {
                return _NumberOfFry;
            }
            set
            {
                OnNumberOfFryChanging(value);
                ReportPropertyChanging("NumberOfFry");
                _NumberOfFry = StructuralObject.SetValidValue(value, "NumberOfFry");
                ReportPropertyChanged("NumberOfFry");
                OnNumberOfFryChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfFry;
        partial void OnNumberOfFryChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfFryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Density
        {
            get
            {
                return _Density;
            }
            set
            {
                OnDensityChanging(value);
                ReportPropertyChanging("Density");
                _Density = StructuralObject.SetValidValue(value, "Density");
                ReportPropertyChanged("Density");
                OnDensityChanged();
            }
        }
        private Nullable<global::System.Double> _Density;
        partial void OnDensityChanging(Nullable<global::System.Double> value);
        partial void OnDensityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Technician
        {
            get
            {
                return _Technician;
            }
            set
            {
                OnTechnicianChanging(value);
                ReportPropertyChanging("Technician");
                _Technician = StructuralObject.SetValidValue(value, "Technician");
                ReportPropertyChanged("Technician");
                OnTechnicianChanged();
            }
        }
        private Nullable<global::System.Int32> _Technician;
        partial void OnTechnicianChanging(Nullable<global::System.Int32> value);
        partial void OnTechnicianChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondsProductionCycle_Contacts", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_PondsProductionCycle_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_PondsProductionCycle_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_PondsProductionCycle_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CPLModel.FK_PondsProductionCycle_Contacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_FeedingLogs_PondsProductionCycle", "FeedingLogs")]
        public EntityCollection<FeedingLog> FeedingLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedingLog>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "FeedingLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedingLog>("CPLModel.FK_FeedingLogs_PondsProductionCycle", "FeedingLogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_SamplingLog_PondsProductionCycle", "SamplingLogs")]
        public EntityCollection<SamplingLog> SamplingLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SamplingLog>("CPLModel.FK_SamplingLog_PondsProductionCycle", "SamplingLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SamplingLog>("CPLModel.FK_SamplingLog_PondsProductionCycle", "SamplingLogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_PondsProductionCycle", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CPLModel.FK_Tasks_PondsProductionCycle", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CPLModel.FK_Tasks_PondsProductionCycle", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_WaterParameterLog_PondsProductionCycle", "WaterParameterLogs")]
        public EntityCollection<WaterParameterLog> WaterParameterLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WaterParameterLog>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "WaterParameterLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WaterParameterLog>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "WaterParameterLogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchDetails_PondsProductionCycles", "BatchDetail")]
        public EntityCollection<BatchDetail> BatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchDetail>("CPLModel.FK_BatchDetails_PondsProductionCycles", "BatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchDetail>("CPLModel.FK_BatchDetails_PondsProductionCycles", "BatchDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_PondsProductionCycle", "PondConsumptionsLog")]
        public EntityCollection<PondConsumptionsLog> PondConsumptionsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondConsumptionsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_PondsProductionCycle", "PondConsumptionsLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Product CreateProduct(global::System.Int32 productID)
        {
            Product product = new Product();
            product.ProductID = productID;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SKU
        {
            get
            {
                return _SKU;
            }
            set
            {
                OnSKUChanging(value);
                ReportPropertyChanging("SKU");
                _SKU = StructuralObject.SetValidValue(value, true, "SKU");
                ReportPropertyChanged("SKU");
                OnSKUChanged();
            }
        }
        private global::System.String _SKU;
        partial void OnSKUChanging(global::System.String value);
        partial void OnSKUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, "Category");
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _Category;
        partial void OnCategoryChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Product_Description
        {
            get
            {
                return _Product_Description;
            }
            set
            {
                OnProduct_DescriptionChanging(value);
                ReportPropertyChanging("Product_Description");
                _Product_Description = StructuralObject.SetValidValue(value, true, "Product_Description");
                ReportPropertyChanged("Product_Description");
                OnProduct_DescriptionChanged();
            }
        }
        private global::System.String _Product_Description;
        partial void OnProduct_DescriptionChanging(global::System.String value);
        partial void OnProduct_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> qtyperunit
        {
            get
            {
                return _qtyperunit;
            }
            set
            {
                OnqtyperunitChanging(value);
                ReportPropertyChanging("qtyperunit");
                _qtyperunit = StructuralObject.SetValidValue(value, "qtyperunit");
                ReportPropertyChanged("qtyperunit");
                OnqtyperunitChanged();
            }
        }
        private Nullable<global::System.Decimal> _qtyperunit;
        partial void OnqtyperunitChanging(Nullable<global::System.Decimal> value);
        partial void OnqtyperunitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Uom
        {
            get
            {
                return _Uom;
            }
            set
            {
                OnUomChanging(value);
                ReportPropertyChanging("Uom");
                _Uom = StructuralObject.SetValidValue(value, true, "Uom");
                ReportPropertyChanged("Uom");
                OnUomChanged();
            }
        }
        private global::System.String _Uom;
        partial void OnUomChanging(global::System.String value);
        partial void OnUomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitInStock
        {
            get
            {
                return _UnitInStock;
            }
            set
            {
                OnUnitInStockChanging(value);
                ReportPropertyChanging("UnitInStock");
                _UnitInStock = StructuralObject.SetValidValue(value, "UnitInStock");
                ReportPropertyChanged("UnitInStock");
                OnUnitInStockChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitInStock;
        partial void OnUnitInStockChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitInStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitInOrder
        {
            get
            {
                return _UnitInOrder;
            }
            set
            {
                OnUnitInOrderChanging(value);
                ReportPropertyChanging("UnitInOrder");
                _UnitInOrder = StructuralObject.SetValidValue(value, "UnitInOrder");
                ReportPropertyChanged("UnitInOrder");
                OnUnitInOrderChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitInOrder;
        partial void OnUnitInOrderChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitInOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReorderLevel
        {
            get
            {
                return _ReorderLevel;
            }
            set
            {
                OnReorderLevelChanging(value);
                ReportPropertyChanging("ReorderLevel");
                _ReorderLevel = StructuralObject.SetValidValue(value, "ReorderLevel");
                ReportPropertyChanged("ReorderLevel");
                OnReorderLevelChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReorderLevel;
        partial void OnReorderLevelChanging(Nullable<global::System.Decimal> value);
        partial void OnReorderLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value, "PurchasePrice");
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SalePrice
        {
            get
            {
                return _SalePrice;
            }
            set
            {
                OnSalePriceChanging(value);
                ReportPropertyChanging("SalePrice");
                _SalePrice = StructuralObject.SetValidValue(value, "SalePrice");
                ReportPropertyChanged("SalePrice");
                OnSalePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SalePrice;
        partial void OnSalePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSalePriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Products_Category", "Category")]
        public Category Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CPLModel.FK_Products_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CPLModel.FK_Products_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CPLModel.FK_Products_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CPLModel.FK_Products_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_FeedingLogs_Products", "FeedingLog")]
        public EntityCollection<FeedingLog> FeedingLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedingLog>("CPLModel.FK_FeedingLogs_Products", "FeedingLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedingLog>("CPLModel.FK_FeedingLogs_Products", "FeedingLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductPurchaseLog_Products", "ProductPurchaseLog")]
        public EntityCollection<ProductPurchaseLog> ProductPurchaseLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductPurchaseLog>("CPLModel.FK_ProductPurchaseLog_Products", "ProductPurchaseLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductPurchaseLog>("CPLModel.FK_ProductPurchaseLog_Products", "ProductPurchaseLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductRequired_Products", "ProductRequired")]
        public EntityCollection<ProductRequired> ProductRequireds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductRequired>("CPLModel.FK_ProductRequired_Products", "ProductRequired");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductRequired>("CPLModel.FK_ProductRequired_Products", "ProductRequired", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Products", "ProductSalesOrder")]
        public EntityCollection<ProductSalesOrder> ProductSalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Products", "ProductSalesOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Products", "ProductSalesOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductsDetails_Products", "ProductsDetail")]
        public EntityCollection<ProductsDetail> ProductsDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsDetail>("CPLModel.FK_ProductsDetails_Products", "ProductsDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsDetail>("CPLModel.FK_ProductsDetails_Products", "ProductsDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductQuantity_Products", "ProductQuantity")]
        public EntityCollection<ProductQuantity> ProductQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductQuantity>("CPLModel.FK_ProductQuantity_Products", "ProductQuantity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductQuantity>("CPLModel.FK_ProductQuantity_Products", "ProductQuantity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PODetails_products", "PODetail")]
        public EntityCollection<PODetail> PODetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PODetail>("CPLModel.FK_PODetails_products", "PODetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PODetail>("CPLModel.FK_PODetails_products", "PODetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_BatchHeader_products", "BatchHeader")]
        public EntityCollection<BatchHeader> BatchHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchHeader>("CPLModel.FK_BatchHeader_products", "BatchHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchHeader>("CPLModel.FK_BatchHeader_products", "BatchHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_DeliveryLog_products", "DeliveryLog")]
        public EntityCollection<DeliveryLog> DeliveryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeliveryLog>("CPLModel.FK_DeliveryLog_products", "DeliveryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeliveryLog>("CPLModel.FK_DeliveryLog_products", "DeliveryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_dbo_BatchDetails_ProductID", "BatchDetail")]
        public EntityCollection<BatchDetail> BatchDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchDetail>("CPLModel.FK_dbo_BatchDetails_ProductID", "BatchDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchDetail>("CPLModel.FK_dbo_BatchDetails_ProductID", "BatchDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PondConsumptionsLog_Products", "PondConsumptionsLog")]
        public EntityCollection<PondConsumptionsLog> PondConsumptionsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_Products", "PondConsumptionsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PondConsumptionsLog>("CPLModel.FK_PondConsumptionsLog_Products", "PondConsumptionsLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductPurchaseLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductPurchaseLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductPurchaseLog object.
        /// </summary>
        /// <param name="purchaseLogID">Initial value of the PurchaseLogID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static ProductPurchaseLog CreateProductPurchaseLog(global::System.Int32 purchaseLogID, global::System.Int32 productID)
        {
            ProductPurchaseLog productPurchaseLog = new ProductPurchaseLog();
            productPurchaseLog.PurchaseLogID = purchaseLogID;
            productPurchaseLog.ProductID = productID;
            return productPurchaseLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseLogID
        {
            get
            {
                return _PurchaseLogID;
            }
            set
            {
                if (_PurchaseLogID != value)
                {
                    OnPurchaseLogIDChanging(value);
                    ReportPropertyChanging("PurchaseLogID");
                    _PurchaseLogID = StructuralObject.SetValidValue(value, "PurchaseLogID");
                    ReportPropertyChanged("PurchaseLogID");
                    OnPurchaseLogIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseLogID;
        partial void OnPurchaseLogIDChanging(global::System.Int32 value);
        partial void OnPurchaseLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String batchID
        {
            get
            {
                return _batchID;
            }
            set
            {
                OnbatchIDChanging(value);
                ReportPropertyChanging("batchID");
                _batchID = StructuralObject.SetValidValue(value, true, "batchID");
                ReportPropertyChanged("batchID");
                OnbatchIDChanged();
            }
        }
        private global::System.String _batchID;
        partial void OnbatchIDChanging(global::System.String value);
        partial void OnbatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true, "Currency");
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value, "PurchasePrice");
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shipping
        {
            get
            {
                return _Shipping;
            }
            set
            {
                OnShippingChanging(value);
                ReportPropertyChanging("Shipping");
                _Shipping = StructuralObject.SetValidValue(value, "Shipping");
                ReportPropertyChanged("Shipping");
                OnShippingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shipping;
        partial void OnShippingChanging(Nullable<global::System.Decimal> value);
        partial void OnShippingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> tax
        {
            get
            {
                return _tax;
            }
            set
            {
                OntaxChanging(value);
                ReportPropertyChanging("tax");
                _tax = StructuralObject.SetValidValue(value, "tax");
                ReportPropertyChanged("tax");
                OntaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _tax;
        partial void OntaxChanging(Nullable<global::System.Decimal> value);
        partial void OntaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Requester
        {
            get
            {
                return _Requester;
            }
            set
            {
                OnRequesterChanging(value);
                ReportPropertyChanging("Requester");
                _Requester = StructuralObject.SetValidValue(value, true, "Requester");
                ReportPropertyChanged("Requester");
                OnRequesterChanged();
            }
        }
        private global::System.String _Requester;
        partial void OnRequesterChanging(global::System.String value);
        partial void OnRequesterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value, true, "userID");
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.String _userID;
        partial void OnuserIDChanging(global::System.String value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isDelivered
        {
            get
            {
                return _isDelivered;
            }
            set
            {
                OnisDeliveredChanging(value);
                ReportPropertyChanging("isDelivered");
                _isDelivered = StructuralObject.SetValidValue(value, "isDelivered");
                ReportPropertyChanged("isDelivered");
                OnisDeliveredChanged();
            }
        }
        private Nullable<global::System.Boolean> _isDelivered;
        partial void OnisDeliveredChanging(Nullable<global::System.Boolean> value);
        partial void OnisDeliveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String location
        {
            get
            {
                return _location;
            }
            set
            {
                OnlocationChanging(value);
                ReportPropertyChanging("location");
                _location = StructuralObject.SetValidValue(value, true, "location");
                ReportPropertyChanged("location");
                OnlocationChanged();
            }
        }
        private global::System.String _location;
        partial void OnlocationChanging(global::System.String value);
        partial void OnlocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, "ExpireDate");
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isSynchronized
        {
            get
            {
                return _isSynchronized;
            }
            set
            {
                OnisSynchronizedChanging(value);
                ReportPropertyChanging("isSynchronized");
                _isSynchronized = StructuralObject.SetValidValue(value, "isSynchronized");
                ReportPropertyChanged("isSynchronized");
                OnisSynchronizedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isSynchronized;
        partial void OnisSynchronizedChanging(Nullable<global::System.Boolean> value);
        partial void OnisSynchronizedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductPurchaseLog_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductPurchaseLog_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductPurchaseLog_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductPurchaseLog_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_ProductPurchaseLog_Products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductQuantity_ProductPurchaseLog", "ProductQuantity")]
        public EntityCollection<ProductQuantity> ProductQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductQuantity>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductQuantity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductQuantity>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductQuantity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductQuantity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductQuantity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductQuantity object.
        /// </summary>
        /// <param name="lotNumber">Initial value of the LotNumber property.</param>
        public static ProductQuantity CreateProductQuantity(global::System.Int32 lotNumber)
        {
            ProductQuantity productQuantity = new ProductQuantity();
            productQuantity.LotNumber = lotNumber;
            return productQuantity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LotNumber
        {
            get
            {
                return _LotNumber;
            }
            set
            {
                if (_LotNumber != value)
                {
                    OnLotNumberChanging(value);
                    ReportPropertyChanging("LotNumber");
                    _LotNumber = StructuralObject.SetValidValue(value, "LotNumber");
                    ReportPropertyChanged("LotNumber");
                    OnLotNumberChanged();
                }
            }
        }
        private global::System.Int32 _LotNumber;
        partial void OnLotNumberChanging(global::System.Int32 value);
        partial void OnLotNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContainerID
        {
            get
            {
                return _ContainerID;
            }
            set
            {
                OnContainerIDChanging(value);
                ReportPropertyChanging("ContainerID");
                _ContainerID = StructuralObject.SetValidValue(value, true, "ContainerID");
                ReportPropertyChanged("ContainerID");
                OnContainerIDChanged();
            }
        }
        private global::System.String _ContainerID;
        partial void OnContainerIDChanging(global::System.String value);
        partial void OnContainerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PurchaseLogID
        {
            get
            {
                return _PurchaseLogID;
            }
            set
            {
                OnPurchaseLogIDChanging(value);
                ReportPropertyChanging("PurchaseLogID");
                _PurchaseLogID = StructuralObject.SetValidValue(value, "PurchaseLogID");
                ReportPropertyChanged("PurchaseLogID");
                OnPurchaseLogIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PurchaseLogID;
        partial void OnPurchaseLogIDChanging(Nullable<global::System.Int32> value);
        partial void OnPurchaseLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> expireDate
        {
            get
            {
                return _expireDate;
            }
            set
            {
                OnexpireDateChanging(value);
                ReportPropertyChanging("expireDate");
                _expireDate = StructuralObject.SetValidValue(value, "expireDate");
                ReportPropertyChanged("expireDate");
                OnexpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _expireDate;
        partial void OnexpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnexpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value, true, "userID");
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.String _userID;
        partial void OnuserIDChanging(global::System.String value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> trxDate
        {
            get
            {
                return _trxDate;
            }
            set
            {
                OntrxDateChanging(value);
                ReportPropertyChanging("trxDate");
                _trxDate = StructuralObject.SetValidValue(value, "trxDate");
                ReportPropertyChanged("trxDate");
                OntrxDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _trxDate;
        partial void OntrxDateChanging(Nullable<global::System.DateTime> value);
        partial void OntrxDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog")]
        public ProductPurchaseLog ProductPurchaseLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductPurchaseLog>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductPurchaseLog>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductPurchaseLog> ProductPurchaseLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductPurchaseLog>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductPurchaseLog>("CPLModel.FK_ProductQuantity_ProductPurchaseLog", "ProductPurchaseLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductQuantity_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductQuantity_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductQuantity_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductQuantity_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_ProductQuantity_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductRequired")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductRequired : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductRequired object.
        /// </summary>
        /// <param name="requirementID">Initial value of the RequirementID property.</param>
        public static ProductRequired CreateProductRequired(global::System.Int32 requirementID)
        {
            ProductRequired productRequired = new ProductRequired();
            productRequired.RequirementID = requirementID;
            return productRequired;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequirementID
        {
            get
            {
                return _RequirementID;
            }
            set
            {
                if (_RequirementID != value)
                {
                    OnRequirementIDChanging(value);
                    ReportPropertyChanging("RequirementID");
                    _RequirementID = StructuralObject.SetValidValue(value, "RequirementID");
                    ReportPropertyChanged("RequirementID");
                    OnRequirementIDChanged();
                }
            }
        }
        private global::System.Int32 _RequirementID;
        partial void OnRequirementIDChanging(global::System.Int32 value);
        partial void OnRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskID;
        partial void OnTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductRequired_Tasks", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductRequired_Tasks", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductRequired_Tasks", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductRequired_Tasks", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("CPLModel.FK_ProductRequired_Tasks", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_ProductRequired", "ProductSalesOrders")]
        public EntityCollection<ProductSalesOrder> ProductSalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductSalesOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductSalesOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductRequired_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductRequired_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductRequired_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductRequired_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_ProductRequired_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductRequiredView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductRequiredView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductRequiredView object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="pondID">Initial value of the PondID property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static ProductRequiredView CreateProductRequiredView(global::System.Int32 taskID, global::System.Int32 productID, global::System.Int32 pondID, global::System.Int32 productionCycleID)
        {
            ProductRequiredView productRequiredView = new ProductRequiredView();
            productRequiredView.TaskID = taskID;
            productRequiredView.ProductID = productID;
            productRequiredView.PondID = pondID;
            productRequiredView.ProductionCycleID = productionCycleID;
            return productRequiredView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Uom
        {
            get
            {
                return _Uom;
            }
            set
            {
                OnUomChanging(value);
                ReportPropertyChanging("Uom");
                _Uom = StructuralObject.SetValidValue(value, true, "Uom");
                ReportPropertyChanged("Uom");
                OnUomChanged();
            }
        }
        private global::System.String _Uom;
        partial void OnUomChanging(global::System.String value);
        partial void OnUomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PondDescription
        {
            get
            {
                return _PondDescription;
            }
            set
            {
                OnPondDescriptionChanging(value);
                ReportPropertyChanging("PondDescription");
                _PondDescription = StructuralObject.SetValidValue(value, true, "PondDescription");
                ReportPropertyChanged("PondDescription");
                OnPondDescriptionChanged();
            }
        }
        private global::System.String _PondDescription;
        partial void OnPondDescriptionChanging(global::System.String value);
        partial void OnPondDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                if (_PondID != value)
                {
                    OnPondIDChanging(value);
                    ReportPropertyChanging("PondID");
                    _PondID = StructuralObject.SetValidValue(value, "PondID");
                    ReportPropertyChanged("PondID");
                    OnPondIDChanged();
                }
            }
        }
        private global::System.Int32 _PondID;
        partial void OnPondIDChanging(global::System.Int32 value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                if (_ProductionCycleID != value)
                {
                    OnProductionCycleIDChanging(value);
                    ReportPropertyChanging("ProductionCycleID");
                    _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                    ReportPropertyChanged("ProductionCycleID");
                    OnProductionCycleIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductSalesOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSalesOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSalesOrder object.
        /// </summary>
        /// <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
        public static ProductSalesOrder CreateProductSalesOrder(global::System.Int32 salesOrderID)
        {
            ProductSalesOrder productSalesOrder = new ProductSalesOrder();
            productSalesOrder.SalesOrderID = salesOrderID;
            return productSalesOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesOrderID
        {
            get
            {
                return _SalesOrderID;
            }
            set
            {
                if (_SalesOrderID != value)
                {
                    OnSalesOrderIDChanging(value);
                    ReportPropertyChanging("SalesOrderID");
                    _SalesOrderID = StructuralObject.SetValidValue(value, "SalesOrderID");
                    ReportPropertyChanged("SalesOrderID");
                    OnSalesOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesOrderID;
        partial void OnSalesOrderIDChanging(global::System.Int32 value);
        partial void OnSalesOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskID;
        partial void OnTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequirementID
        {
            get
            {
                return _RequirementID;
            }
            set
            {
                OnRequirementIDChanging(value);
                ReportPropertyChanging("RequirementID");
                _RequirementID = StructuralObject.SetValidValue(value, "RequirementID");
                ReportPropertyChanged("RequirementID");
                OnRequirementIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RequirementID;
        partial void OnRequirementIDChanging(Nullable<global::System.Int32> value);
        partial void OnRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QTY
        {
            get
            {
                return _QTY;
            }
            set
            {
                OnQTYChanging(value);
                ReportPropertyChanging("QTY");
                _QTY = StructuralObject.SetValidValue(value, "QTY");
                ReportPropertyChanged("QTY");
                OnQTYChanged();
            }
        }
        private Nullable<global::System.Decimal> _QTY;
        partial void OnQTYChanging(Nullable<global::System.Decimal> value);
        partial void OnQTYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value, "total");
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _total;
        partial void OntotalChanging(Nullable<global::System.Decimal> value);
        partial void OntotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> trxDate
        {
            get
            {
                return _trxDate;
            }
            set
            {
                OntrxDateChanging(value);
                ReportPropertyChanging("trxDate");
                _trxDate = StructuralObject.SetValidValue(value, "trxDate");
                ReportPropertyChanged("trxDate");
                OntrxDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _trxDate;
        partial void OntrxDateChanging(Nullable<global::System.DateTime> value);
        partial void OntrxDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserPicked
        {
            get
            {
                return _UserPicked;
            }
            set
            {
                OnUserPickedChanging(value);
                ReportPropertyChanging("UserPicked");
                _UserPicked = StructuralObject.SetValidValue(value, "UserPicked");
                ReportPropertyChanged("UserPicked");
                OnUserPickedChanged();
            }
        }
        private Nullable<global::System.Int32> _UserPicked;
        partial void OnUserPickedChanging(Nullable<global::System.Int32> value);
        partial void OnUserPickedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userPickedName
        {
            get
            {
                return _userPickedName;
            }
            set
            {
                OnuserPickedNameChanging(value);
                ReportPropertyChanging("userPickedName");
                _userPickedName = StructuralObject.SetValidValue(value, true, "userPickedName");
                ReportPropertyChanged("userPickedName");
                OnuserPickedNameChanged();
            }
        }
        private global::System.String _userPickedName;
        partial void OnuserPickedNameChanging(global::System.String value);
        partial void OnuserPickedNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LotNumber
        {
            get
            {
                return _LotNumber;
            }
            set
            {
                OnLotNumberChanging(value);
                ReportPropertyChanging("LotNumber");
                _LotNumber = StructuralObject.SetValidValue(value, "LotNumber");
                ReportPropertyChanged("LotNumber");
                OnLotNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _LotNumber;
        partial void OnLotNumberChanging(Nullable<global::System.Int32> value);
        partial void OnLotNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Contacts", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ProductSalesOrders_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ProductSalesOrders_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_ProductSalesOrders_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CPLModel.FK_ProductSalesOrders_Contacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_ProductRequired", "ProductRequireds")]
        public ProductRequired ProductRequired
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequired>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductRequireds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequired>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductRequireds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductRequired> ProductRequiredReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequired>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductRequireds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductRequired>("CPLModel.FK_ProductSalesOrders_ProductRequired", "ProductRequireds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Tasks", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductSalesOrders_Tasks", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductSalesOrders_Tasks", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ProductSalesOrders_Tasks", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("CPLModel.FK_ProductSalesOrders_Tasks", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductSalesOrders_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductSalesOrders_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductSalesOrders_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_ProductSalesOrders_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductsDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductsDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductsDetail object.
        /// </summary>
        /// <param name="productTrxID">Initial value of the ProductTrxID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static ProductsDetail CreateProductsDetail(global::System.Int32 productTrxID, global::System.Int32 productID)
        {
            ProductsDetail productsDetail = new ProductsDetail();
            productsDetail.ProductTrxID = productTrxID;
            productsDetail.ProductID = productID;
            return productsDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTrxID
        {
            get
            {
                return _ProductTrxID;
            }
            set
            {
                if (_ProductTrxID != value)
                {
                    OnProductTrxIDChanging(value);
                    ReportPropertyChanging("ProductTrxID");
                    _ProductTrxID = StructuralObject.SetValidValue(value, "ProductTrxID");
                    ReportPropertyChanged("ProductTrxID");
                    OnProductTrxIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductTrxID;
        partial void OnProductTrxIDChanging(global::System.Int32 value);
        partial void OnProductTrxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ordered
        {
            get
            {
                return _Ordered;
            }
            set
            {
                OnOrderedChanging(value);
                ReportPropertyChanging("Ordered");
                _Ordered = StructuralObject.SetValidValue(value, "Ordered");
                ReportPropertyChanged("Ordered");
                OnOrderedChanged();
            }
        }
        private Nullable<global::System.Int32> _Ordered;
        partial void OnOrderedChanging(Nullable<global::System.Int32> value);
        partial void OnOrderedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> received
        {
            get
            {
                return _received;
            }
            set
            {
                OnreceivedChanging(value);
                ReportPropertyChanging("received");
                _received = StructuralObject.SetValidValue(value, "received");
                ReportPropertyChanged("received");
                OnreceivedChanged();
            }
        }
        private Nullable<global::System.Int32> _received;
        partial void OnreceivedChanging(Nullable<global::System.Int32> value);
        partial void OnreceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sold
        {
            get
            {
                return _sold;
            }
            set
            {
                OnsoldChanging(value);
                ReportPropertyChanging("sold");
                _sold = StructuralObject.SetValidValue(value, "sold");
                ReportPropertyChanged("sold");
                OnsoldChanged();
            }
        }
        private Nullable<global::System.Int32> _sold;
        partial void OnsoldChanging(Nullable<global::System.Int32> value);
        partial void OnsoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> shrinkage
        {
            get
            {
                return _shrinkage;
            }
            set
            {
                OnshrinkageChanging(value);
                ReportPropertyChanging("shrinkage");
                _shrinkage = StructuralObject.SetValidValue(value, "shrinkage");
                ReportPropertyChanged("shrinkage");
                OnshrinkageChanged();
            }
        }
        private Nullable<global::System.Int32> _shrinkage;
        partial void OnshrinkageChanging(Nullable<global::System.Int32> value);
        partial void OnshrinkageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> trxDate
        {
            get
            {
                return _trxDate;
            }
            set
            {
                OntrxDateChanging(value);
                ReportPropertyChanging("trxDate");
                _trxDate = StructuralObject.SetValidValue(value, "trxDate");
                ReportPropertyChanged("trxDate");
                OntrxDateChanged();
            }
        }
        private Nullable<global::System.Int32> _trxDate;
        partial void OntrxDateChanging(Nullable<global::System.Int32> value);
        partial void OntrxDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductsDetails_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductsDetails_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductsDetails_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPLModel.FK_ProductsDetails_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPLModel.FK_ProductsDetails_Products", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ProductsInfoView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductsInfoView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductsInfoView object.
        /// </summary>
        /// <param name="productid">Initial value of the productid property.</param>
        public static ProductsInfoView CreateProductsInfoView(global::System.Int32 productid)
        {
            ProductsInfoView productsInfoView = new ProductsInfoView();
            productsInfoView.productid = productid;
            return productsInfoView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 productid
        {
            get
            {
                return _productid;
            }
            set
            {
                if (_productid != value)
                {
                    OnproductidChanging(value);
                    ReportPropertyChanging("productid");
                    _productid = StructuralObject.SetValidValue(value, "productid");
                    ReportPropertyChanged("productid");
                    OnproductidChanged();
                }
            }
        }
        private global::System.Int32 _productid;
        partial void OnproductidChanging(global::System.Int32 value);
        partial void OnproductidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String categoryname
        {
            get
            {
                return _categoryname;
            }
            set
            {
                OncategorynameChanging(value);
                ReportPropertyChanging("categoryname");
                _categoryname = StructuralObject.SetValidValue(value, true, "categoryname");
                ReportPropertyChanged("categoryname");
                OncategorynameChanged();
            }
        }
        private global::System.String _categoryname;
        partial void OncategorynameChanging(global::System.String value);
        partial void OncategorynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String productname
        {
            get
            {
                return _productname;
            }
            set
            {
                OnproductnameChanging(value);
                ReportPropertyChanging("productname");
                _productname = StructuralObject.SetValidValue(value, true, "productname");
                ReportPropertyChanged("productname");
                OnproductnameChanged();
            }
        }
        private global::System.String _productname;
        partial void OnproductnameChanging(global::System.String value);
        partial void OnproductnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String product_description
        {
            get
            {
                return _product_description;
            }
            set
            {
                Onproduct_descriptionChanging(value);
                ReportPropertyChanging("product_description");
                _product_description = StructuralObject.SetValidValue(value, true, "product_description");
                ReportPropertyChanged("product_description");
                Onproduct_descriptionChanged();
            }
        }
        private global::System.String _product_description;
        partial void Onproduct_descriptionChanging(global::System.String value);
        partial void Onproduct_descriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="pOID">Initial value of the POID property.</param>
        /// <param name="vendorID">Initial value of the VendorID property.</param>
        /// <param name="shipTo">Initial value of the ShipTo property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.String pOID, global::System.Int32 vendorID, global::System.Int32 shipTo)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.POID = pOID;
            purchaseOrder.VendorID = vendorID;
            purchaseOrder.ShipTo = shipTo;
            return purchaseOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String POID
        {
            get
            {
                return _POID;
            }
            set
            {
                if (_POID != value)
                {
                    OnPOIDChanging(value);
                    ReportPropertyChanging("POID");
                    _POID = StructuralObject.SetValidValue(value, false, "POID");
                    ReportPropertyChanged("POID");
                    OnPOIDChanged();
                }
            }
        }
        private global::System.String _POID;
        partial void OnPOIDChanging(global::System.String value);
        partial void OnPOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                OnVendorIDChanging(value);
                ReportPropertyChanging("VendorID");
                _VendorID = StructuralObject.SetValidValue(value, "VendorID");
                ReportPropertyChanged("VendorID");
                OnVendorIDChanged();
            }
        }
        private global::System.Int32 _VendorID;
        partial void OnVendorIDChanging(global::System.Int32 value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OtherFee
        {
            get
            {
                return _OtherFee;
            }
            set
            {
                OnOtherFeeChanging(value);
                ReportPropertyChanging("OtherFee");
                _OtherFee = StructuralObject.SetValidValue(value, "OtherFee");
                ReportPropertyChanged("OtherFee");
                OnOtherFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _OtherFee;
        partial void OnOtherFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value, "SubTotal");
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _SubTotal;
        partial void OnSubTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnSubTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> taxRate
        {
            get
            {
                return _taxRate;
            }
            set
            {
                OntaxRateChanging(value);
                ReportPropertyChanging("taxRate");
                _taxRate = StructuralObject.SetValidValue(value, "taxRate");
                ReportPropertyChanged("taxRate");
                OntaxRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _taxRate;
        partial void OntaxRateChanging(Nullable<global::System.Decimal> value);
        partial void OntaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value, "TotalPrice");
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPrice;
        partial void OnTotalPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shipping
        {
            get
            {
                return _Shipping;
            }
            set
            {
                OnShippingChanging(value);
                ReportPropertyChanging("Shipping");
                _Shipping = StructuralObject.SetValidValue(value, "Shipping");
                ReportPropertyChanged("Shipping");
                OnShippingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shipping;
        partial void OnShippingChanging(Nullable<global::System.Decimal> value);
        partial void OnShippingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShipTo
        {
            get
            {
                return _ShipTo;
            }
            set
            {
                OnShipToChanging(value);
                ReportPropertyChanging("ShipTo");
                _ShipTo = StructuralObject.SetValidValue(value, "ShipTo");
                ReportPropertyChanged("ShipTo");
                OnShipToChanged();
            }
        }
        private global::System.Int32 _ShipTo;
        partial void OnShipToChanging(global::System.Int32 value);
        partial void OnShipToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PoDate
        {
            get
            {
                return _PoDate;
            }
            set
            {
                OnPoDateChanging(value);
                ReportPropertyChanging("PoDate");
                _PoDate = StructuralObject.SetValidValue(value, "PoDate");
                ReportPropertyChanged("PoDate");
                OnPoDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PoDate;
        partial void OnPoDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPoDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isComplete
        {
            get
            {
                return _isComplete;
            }
            set
            {
                OnisCompleteChanging(value);
                ReportPropertyChanging("isComplete");
                _isComplete = StructuralObject.SetValidValue(value, "isComplete");
                ReportPropertyChanged("isComplete");
                OnisCompleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _isComplete;
        partial void OnisCompleteChanging(Nullable<global::System.Boolean> value);
        partial void OnisCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POReference
        {
            get
            {
                return _POReference;
            }
            set
            {
                OnPOReferenceChanging(value);
                ReportPropertyChanging("POReference");
                _POReference = StructuralObject.SetValidValue(value, true, "POReference");
                ReportPropertyChanged("POReference");
                OnPOReferenceChanged();
            }
        }
        private global::System.String _POReference;
        partial void OnPOReferenceChanging(global::System.String value);
        partial void OnPOReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyShortCode
        {
            get
            {
                return _CurrencyShortCode;
            }
            set
            {
                OnCurrencyShortCodeChanging(value);
                ReportPropertyChanging("CurrencyShortCode");
                _CurrencyShortCode = StructuralObject.SetValidValue(value, true, "CurrencyShortCode");
                ReportPropertyChanged("CurrencyShortCode");
                OnCurrencyShortCodeChanged();
            }
        }
        private global::System.String _CurrencyShortCode;
        partial void OnCurrencyShortCodeChanging(global::System.String value);
        partial void OnCurrencyShortCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CurrencyRate
        {
            get
            {
                return _CurrencyRate;
            }
            set
            {
                OnCurrencyRateChanging(value);
                ReportPropertyChanging("CurrencyRate");
                _CurrencyRate = StructuralObject.SetValidValue(value, "CurrencyRate");
                ReportPropertyChanged("CurrencyRate");
                OnCurrencyRateChanged();
            }
        }
        private Nullable<global::System.Double> _CurrencyRate;
        partial void OnCurrencyRateChanging(Nullable<global::System.Double> value);
        partial void OnCurrencyRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseOrders_Facilities", "Facility")]
        public Facility Facility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_PurchaseOrders_Facilities", "Facility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_PurchaseOrders_Facilities", "Facility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facility> FacilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CPLModel.FK_PurchaseOrders_Facilities", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facility>("CPLModel.FK_PurchaseOrders_Facilities", "Facility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PODetails_PurchaseOrders", "PODetail")]
        public EntityCollection<PODetail> PODetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PODetail>("CPLModel.FK_PODetails_PurchaseOrders", "PODetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PODetail>("CPLModel.FK_PODetails_PurchaseOrders", "PODetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseOrders_Vendor", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CPLModel.FK_PurchaseOrders_Vendor", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CPLModel.FK_PurchaseOrders_Vendor", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CPLModel.FK_PurchaseOrders_Vendor", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("CPLModel.FK_PurchaseOrders_Vendor", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_MasterCurrency_CurrencyShortCode", "MasterCurrency")]
        public MasterCurrency MasterCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "MasterCurrency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "MasterCurrency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCurrency> MasterCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrency>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "MasterCurrency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCurrency>("CPLModel.FK_MasterCurrency_CurrencyShortCode", "MasterCurrency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="PurchaseTaxTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseTaxTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseTaxTransaction object.
        /// </summary>
        /// <param name="pOTaxTrxID">Initial value of the POTaxTrxID property.</param>
        public static PurchaseTaxTransaction CreatePurchaseTaxTransaction(global::System.Int32 pOTaxTrxID)
        {
            PurchaseTaxTransaction purchaseTaxTransaction = new PurchaseTaxTransaction();
            purchaseTaxTransaction.POTaxTrxID = pOTaxTrxID;
            return purchaseTaxTransaction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POHeaderID
        {
            get
            {
                return _POHeaderID;
            }
            set
            {
                OnPOHeaderIDChanging(value);
                ReportPropertyChanging("POHeaderID");
                _POHeaderID = StructuralObject.SetValidValue(value, true, "POHeaderID");
                ReportPropertyChanged("POHeaderID");
                OnPOHeaderIDChanged();
            }
        }
        private global::System.String _POHeaderID;
        partial void OnPOHeaderIDChanging(global::System.String value);
        partial void OnPOHeaderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterTaxID
        {
            get
            {
                return _MasterTaxID;
            }
            set
            {
                OnMasterTaxIDChanging(value);
                ReportPropertyChanging("MasterTaxID");
                _MasterTaxID = StructuralObject.SetValidValue(value, "MasterTaxID");
                ReportPropertyChanged("MasterTaxID");
                OnMasterTaxIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterTaxID;
        partial void OnMasterTaxIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POTaxTrxID
        {
            get
            {
                return _POTaxTrxID;
            }
            set
            {
                if (_POTaxTrxID != value)
                {
                    OnPOTaxTrxIDChanging(value);
                    ReportPropertyChanging("POTaxTrxID");
                    _POTaxTrxID = StructuralObject.SetValidValue(value, "POTaxTrxID");
                    ReportPropertyChanged("POTaxTrxID");
                    OnPOTaxTrxIDChanged();
                }
            }
        }
        private global::System.Int32 _POTaxTrxID;
        partial void OnPOTaxTrxIDChanging(global::System.Int32 value);
        partial void OnPOTaxTrxIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseTaxTransactions_MasterTax", "MasterTax")]
        public MasterTax MasterTax
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterTax>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "MasterTax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterTax>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "MasterTax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterTax> MasterTaxReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterTax>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "MasterTax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterTax>("CPLModel.FK_PurchaseTaxTransactions_MasterTax", "MasterTax", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="RequiredFeedNext10Days")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredFeedNext10Days : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredFeedNext10Days object.
        /// </summary>
        /// <param name="noPakan">Initial value of the NoPakan property.</param>
        public static RequiredFeedNext10Days CreateRequiredFeedNext10Days(global::System.String noPakan)
        {
            RequiredFeedNext10Days requiredFeedNext10Days = new RequiredFeedNext10Days();
            requiredFeedNext10Days.NoPakan = noPakan;
            return requiredFeedNext10Days;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoPakan
        {
            get
            {
                return _NoPakan;
            }
            set
            {
                if (_NoPakan != value)
                {
                    OnNoPakanChanging(value);
                    ReportPropertyChanging("NoPakan");
                    _NoPakan = StructuralObject.SetValidValue(value, false, "NoPakan");
                    ReportPropertyChanged("NoPakan");
                    OnNoPakanChanged();
                }
            }
        }
        private global::System.String _NoPakan;
        partial void OnNoPakanChanging(global::System.String value);
        partial void OnNoPakanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Pakan
        {
            get
            {
                return _Pakan;
            }
            set
            {
                OnPakanChanging(value);
                ReportPropertyChanging("Pakan");
                _Pakan = StructuralObject.SetValidValue(value, "Pakan");
                ReportPropertyChanged("Pakan");
                OnPakanChanged();
            }
        }
        private Nullable<global::System.Double> _Pakan;
        partial void OnPakanChanging(Nullable<global::System.Double> value);
        partial void OnPakanChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="RequiredFeedNext14days")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredFeedNext14days : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredFeedNext14days object.
        /// </summary>
        /// <param name="noPakan">Initial value of the NoPakan property.</param>
        public static RequiredFeedNext14days CreateRequiredFeedNext14days(global::System.String noPakan)
        {
            RequiredFeedNext14days requiredFeedNext14days = new RequiredFeedNext14days();
            requiredFeedNext14days.NoPakan = noPakan;
            return requiredFeedNext14days;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoPakan
        {
            get
            {
                return _NoPakan;
            }
            set
            {
                if (_NoPakan != value)
                {
                    OnNoPakanChanging(value);
                    ReportPropertyChanging("NoPakan");
                    _NoPakan = StructuralObject.SetValidValue(value, false, "NoPakan");
                    ReportPropertyChanged("NoPakan");
                    OnNoPakanChanged();
                }
            }
        }
        private global::System.String _NoPakan;
        partial void OnNoPakanChanging(global::System.String value);
        partial void OnNoPakanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Pakan
        {
            get
            {
                return _Pakan;
            }
            set
            {
                OnPakanChanging(value);
                ReportPropertyChanging("Pakan");
                _Pakan = StructuralObject.SetValidValue(value, "Pakan");
                ReportPropertyChanged("Pakan");
                OnPakanChanged();
            }
        }
        private Nullable<global::System.Double> _Pakan;
        partial void OnPakanChanging(Nullable<global::System.Double> value);
        partial void OnPakanChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="RequiredFeedNext3days")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredFeedNext3days : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredFeedNext3days object.
        /// </summary>
        /// <param name="noPakan">Initial value of the NoPakan property.</param>
        public static RequiredFeedNext3days CreateRequiredFeedNext3days(global::System.String noPakan)
        {
            RequiredFeedNext3days requiredFeedNext3days = new RequiredFeedNext3days();
            requiredFeedNext3days.NoPakan = noPakan;
            return requiredFeedNext3days;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoPakan
        {
            get
            {
                return _NoPakan;
            }
            set
            {
                if (_NoPakan != value)
                {
                    OnNoPakanChanging(value);
                    ReportPropertyChanging("NoPakan");
                    _NoPakan = StructuralObject.SetValidValue(value, false, "NoPakan");
                    ReportPropertyChanged("NoPakan");
                    OnNoPakanChanged();
                }
            }
        }
        private global::System.String _NoPakan;
        partial void OnNoPakanChanging(global::System.String value);
        partial void OnNoPakanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Pakan
        {
            get
            {
                return _Pakan;
            }
            set
            {
                OnPakanChanging(value);
                ReportPropertyChanging("Pakan");
                _Pakan = StructuralObject.SetValidValue(value, "Pakan");
                ReportPropertyChanged("Pakan");
                OnPakanChanged();
            }
        }
        private Nullable<global::System.Double> _Pakan;
        partial void OnPakanChanging(Nullable<global::System.Double> value);
        partial void OnPakanChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="RequredFeedNext7days")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequredFeedNext7days : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequredFeedNext7days object.
        /// </summary>
        /// <param name="noPakan">Initial value of the NoPakan property.</param>
        public static RequredFeedNext7days CreateRequredFeedNext7days(global::System.String noPakan)
        {
            RequredFeedNext7days requredFeedNext7days = new RequredFeedNext7days();
            requredFeedNext7days.NoPakan = noPakan;
            return requredFeedNext7days;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoPakan
        {
            get
            {
                return _NoPakan;
            }
            set
            {
                if (_NoPakan != value)
                {
                    OnNoPakanChanging(value);
                    ReportPropertyChanging("NoPakan");
                    _NoPakan = StructuralObject.SetValidValue(value, false, "NoPakan");
                    ReportPropertyChanged("NoPakan");
                    OnNoPakanChanged();
                }
            }
        }
        private global::System.String _NoPakan;
        partial void OnNoPakanChanging(global::System.String value);
        partial void OnNoPakanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Pakan
        {
            get
            {
                return _Pakan;
            }
            set
            {
                OnPakanChanging(value);
                ReportPropertyChanging("Pakan");
                _Pakan = StructuralObject.SetValidValue(value, "Pakan");
                ReportPropertyChanged("Pakan");
                OnPakanChanged();
            }
        }
        private Nullable<global::System.Double> _Pakan;
        partial void OnPakanChanging(Nullable<global::System.Double> value);
        partial void OnPakanChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="ResultNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultNote object.
        /// </summary>
        /// <param name="resultID">Initial value of the resultID property.</param>
        public static ResultNote CreateResultNote(global::System.Int32 resultID)
        {
            ResultNote resultNote = new ResultNote();
            resultNote.resultID = resultID;
            return resultNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 resultID
        {
            get
            {
                return _resultID;
            }
            set
            {
                if (_resultID != value)
                {
                    OnresultIDChanging(value);
                    ReportPropertyChanging("resultID");
                    _resultID = StructuralObject.SetValidValue(value, "resultID");
                    ReportPropertyChanged("resultID");
                    OnresultIDChanged();
                }
            }
        }
        private global::System.Int32 _resultID;
        partial void OnresultIDChanging(global::System.Int32 value);
        partial void OnresultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultNote1
        {
            get
            {
                return _ResultNote1;
            }
            set
            {
                OnResultNote1Changing(value);
                ReportPropertyChanging("ResultNote1");
                _ResultNote1 = StructuralObject.SetValidValue(value, true, "ResultNote1");
                ReportPropertyChanged("ResultNote1");
                OnResultNote1Changed();
            }
        }
        private global::System.String _ResultNote1;
        partial void OnResultNote1Changing(global::System.String value);
        partial void OnResultNote1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> taskID
        {
            get
            {
                return _taskID;
            }
            set
            {
                OntaskIDChanging(value);
                ReportPropertyChanging("taskID");
                _taskID = StructuralObject.SetValidValue(value, "taskID");
                ReportPropertyChanged("taskID");
                OntaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _taskID;
        partial void OntaskIDChanging(Nullable<global::System.Int32> value);
        partial void OntaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> entryDate
        {
            get
            {
                return _entryDate;
            }
            set
            {
                OnentryDateChanging(value);
                ReportPropertyChanging("entryDate");
                _entryDate = StructuralObject.SetValidValue(value, "entryDate");
                ReportPropertyChanged("entryDate");
                OnentryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _entryDate;
        partial void OnentryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnentryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, true, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ResultNote_ResultNote", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ResultNote_ResultNote", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ResultNote_ResultNote", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CPLModel.FK_ResultNote_ResultNote", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("CPLModel.FK_ResultNote_ResultNote", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="SalesOrderDetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrderDetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrderDetailsView object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="salesOrderDetailID">Initial value of the salesOrderDetailID property.</param>
        public static SalesOrderDetailsView CreateSalesOrderDetailsView(global::System.Int32 productId, global::System.Int32 salesOrderDetailID)
        {
            SalesOrderDetailsView salesOrderDetailsView = new SalesOrderDetailsView();
            salesOrderDetailsView.ProductId = productId;
            salesOrderDetailsView.salesOrderDetailID = salesOrderDetailID;
            return salesOrderDetailsView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value, "price");
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _price;
        partial void OnpriceChanging(Nullable<global::System.Decimal> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> qty
        {
            get
            {
                return _qty;
            }
            set
            {
                OnqtyChanging(value);
                ReportPropertyChanging("qty");
                _qty = StructuralObject.SetValidValue(value, "qty");
                ReportPropertyChanged("qty");
                OnqtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _qty;
        partial void OnqtyChanging(Nullable<global::System.Decimal> value);
        partial void OnqtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalesOrderHeaderID
        {
            get
            {
                return _SalesOrderHeaderID;
            }
            set
            {
                OnSalesOrderHeaderIDChanging(value);
                ReportPropertyChanging("SalesOrderHeaderID");
                _SalesOrderHeaderID = StructuralObject.SetValidValue(value, "SalesOrderHeaderID");
                ReportPropertyChanged("SalesOrderHeaderID");
                OnSalesOrderHeaderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SalesOrderHeaderID;
        partial void OnSalesOrderHeaderIDChanging(Nullable<global::System.Int32> value);
        partial void OnSalesOrderHeaderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 salesOrderDetailID
        {
            get
            {
                return _salesOrderDetailID;
            }
            set
            {
                if (_salesOrderDetailID != value)
                {
                    OnsalesOrderDetailIDChanging(value);
                    ReportPropertyChanging("salesOrderDetailID");
                    _salesOrderDetailID = StructuralObject.SetValidValue(value, "salesOrderDetailID");
                    ReportPropertyChanged("salesOrderDetailID");
                    OnsalesOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _salesOrderDetailID;
        partial void OnsalesOrderDetailIDChanging(global::System.Int32 value);
        partial void OnsalesOrderDetailIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="SamplingLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SamplingLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SamplingLog object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        public static SamplingLog CreateSamplingLog(global::System.Int32 logID)
        {
            SamplingLog samplingLog = new SamplingLog();
            samplingLog.LogID = logID;
            return samplingLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value, "LogID");
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value, "LogDate");
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogDate;
        partial void OnLogDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MedianBodyWeight
        {
            get
            {
                return _MedianBodyWeight;
            }
            set
            {
                OnMedianBodyWeightChanging(value);
                ReportPropertyChanging("MedianBodyWeight");
                _MedianBodyWeight = StructuralObject.SetValidValue(value, "MedianBodyWeight");
                ReportPropertyChanged("MedianBodyWeight");
                OnMedianBodyWeightChanged();
            }
        }
        private Nullable<global::System.Double> _MedianBodyWeight;
        partial void OnMedianBodyWeightChanging(Nullable<global::System.Double> value);
        partial void OnMedianBodyWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, "Size");
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Double> _Size;
        partial void OnSizeChanging(Nullable<global::System.Double> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WeightperWeek
        {
            get
            {
                return _WeightperWeek;
            }
            set
            {
                OnWeightperWeekChanging(value);
                ReportPropertyChanging("WeightperWeek");
                _WeightperWeek = StructuralObject.SetValidValue(value, "WeightperWeek");
                ReportPropertyChanged("WeightperWeek");
                OnWeightperWeekChanged();
            }
        }
        private Nullable<global::System.Double> _WeightperWeek;
        partial void OnWeightperWeekChanging(Nullable<global::System.Double> value);
        partial void OnWeightperWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AverageDailyGrowth
        {
            get
            {
                return _AverageDailyGrowth;
            }
            set
            {
                OnAverageDailyGrowthChanging(value);
                ReportPropertyChanging("AverageDailyGrowth");
                _AverageDailyGrowth = StructuralObject.SetValidValue(value, "AverageDailyGrowth");
                ReportPropertyChanged("AverageDailyGrowth");
                OnAverageDailyGrowthChanged();
            }
        }
        private Nullable<global::System.Double> _AverageDailyGrowth;
        partial void OnAverageDailyGrowthChanging(Nullable<global::System.Double> value);
        partial void OnAverageDailyGrowthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CummulativeADG
        {
            get
            {
                return _CummulativeADG;
            }
            set
            {
                OnCummulativeADGChanging(value);
                ReportPropertyChanging("CummulativeADG");
                _CummulativeADG = StructuralObject.SetValidValue(value, "CummulativeADG");
                ReportPropertyChanged("CummulativeADG");
                OnCummulativeADGChanged();
            }
        }
        private Nullable<global::System.Double> _CummulativeADG;
        partial void OnCummulativeADGChanging(Nullable<global::System.Double> value);
        partial void OnCummulativeADGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeedType
        {
            get
            {
                return _FeedType;
            }
            set
            {
                OnFeedTypeChanging(value);
                ReportPropertyChanging("FeedType");
                _FeedType = StructuralObject.SetValidValue(value, true, "FeedType");
                ReportPropertyChanged("FeedType");
                OnFeedTypeChanged();
            }
        }
        private global::System.String _FeedType;
        partial void OnFeedTypeChanging(global::System.String value);
        partial void OnFeedTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DailyFeed
        {
            get
            {
                return _DailyFeed;
            }
            set
            {
                OnDailyFeedChanging(value);
                ReportPropertyChanging("DailyFeed");
                _DailyFeed = StructuralObject.SetValidValue(value, "DailyFeed");
                ReportPropertyChanged("DailyFeed");
                OnDailyFeedChanged();
            }
        }
        private Nullable<global::System.Decimal> _DailyFeed;
        partial void OnDailyFeedChanging(Nullable<global::System.Decimal> value);
        partial void OnDailyFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CummulativeFeed
        {
            get
            {
                return _CummulativeFeed;
            }
            set
            {
                OnCummulativeFeedChanging(value);
                ReportPropertyChanging("CummulativeFeed");
                _CummulativeFeed = StructuralObject.SetValidValue(value, "CummulativeFeed");
                ReportPropertyChanged("CummulativeFeed");
                OnCummulativeFeedChanged();
            }
        }
        private Nullable<global::System.Int32> _CummulativeFeed;
        partial void OnCummulativeFeedChanging(Nullable<global::System.Int32> value);
        partial void OnCummulativeFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeeklyFeed
        {
            get
            {
                return _WeeklyFeed;
            }
            set
            {
                OnWeeklyFeedChanging(value);
                ReportPropertyChanging("WeeklyFeed");
                _WeeklyFeed = StructuralObject.SetValidValue(value, "WeeklyFeed");
                ReportPropertyChanged("WeeklyFeed");
                OnWeeklyFeedChanged();
            }
        }
        private Nullable<global::System.Int32> _WeeklyFeed;
        partial void OnWeeklyFeedChanging(Nullable<global::System.Int32> value);
        partial void OnWeeklyFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FCR
        {
            get
            {
                return _FCR;
            }
            set
            {
                OnFCRChanging(value);
                ReportPropertyChanging("FCR");
                _FCR = StructuralObject.SetValidValue(value, "FCR");
                ReportPropertyChanged("FCR");
                OnFCRChanged();
            }
        }
        private Nullable<global::System.Double> _FCR;
        partial void OnFCRChanging(Nullable<global::System.Double> value);
        partial void OnFCRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Biomass
        {
            get
            {
                return _Biomass;
            }
            set
            {
                OnBiomassChanging(value);
                ReportPropertyChanging("Biomass");
                _Biomass = StructuralObject.SetValidValue(value, "Biomass");
                ReportPropertyChanged("Biomass");
                OnBiomassChanged();
            }
        }
        private Nullable<global::System.Double> _Biomass;
        partial void OnBiomassChanging(Nullable<global::System.Double> value);
        partial void OnBiomassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> feedingRate
        {
            get
            {
                return _feedingRate;
            }
            set
            {
                OnfeedingRateChanging(value);
                ReportPropertyChanging("feedingRate");
                _feedingRate = StructuralObject.SetValidValue(value, "feedingRate");
                ReportPropertyChanged("feedingRate");
                OnfeedingRateChanged();
            }
        }
        private Nullable<global::System.Double> _feedingRate;
        partial void OnfeedingRateChanging(Nullable<global::System.Double> value);
        partial void OnfeedingRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FeedConsumptions
        {
            get
            {
                return _FeedConsumptions;
            }
            set
            {
                OnFeedConsumptionsChanging(value);
                ReportPropertyChanging("FeedConsumptions");
                _FeedConsumptions = StructuralObject.SetValidValue(value, "FeedConsumptions");
                ReportPropertyChanged("FeedConsumptions");
                OnFeedConsumptionsChanged();
            }
        }
        private Nullable<global::System.Double> _FeedConsumptions;
        partial void OnFeedConsumptionsChanging(Nullable<global::System.Double> value);
        partial void OnFeedConsumptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Populations
        {
            get
            {
                return _Populations;
            }
            set
            {
                OnPopulationsChanging(value);
                ReportPropertyChanging("Populations");
                _Populations = StructuralObject.SetValidValue(value, "Populations");
                ReportPropertyChanged("Populations");
                OnPopulationsChanged();
            }
        }
        private Nullable<global::System.Double> _Populations;
        partial void OnPopulationsChanging(Nullable<global::System.Double> value);
        partial void OnPopulationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SurvivalRate
        {
            get
            {
                return _SurvivalRate;
            }
            set
            {
                OnSurvivalRateChanging(value);
                ReportPropertyChanging("SurvivalRate");
                _SurvivalRate = StructuralObject.SetValidValue(value, "SurvivalRate");
                ReportPropertyChanged("SurvivalRate");
                OnSurvivalRateChanged();
            }
        }
        private Nullable<global::System.Double> _SurvivalRate;
        partial void OnSurvivalRateChanging(Nullable<global::System.Double> value);
        partial void OnSurvivalRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionCycleID;
        partial void OnProductionCycleIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WeeklyFCR
        {
            get
            {
                return _WeeklyFCR;
            }
            set
            {
                OnWeeklyFCRChanging(value);
                ReportPropertyChanging("WeeklyFCR");
                _WeeklyFCR = StructuralObject.SetValidValue(value, "WeeklyFCR");
                ReportPropertyChanged("WeeklyFCR");
                OnWeeklyFCRChanged();
            }
        }
        private Nullable<global::System.Decimal> _WeeklyFCR;
        partial void OnWeeklyFCRChanging(Nullable<global::System.Decimal> value);
        partial void OnWeeklyFCRChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_SamplingLog_PondsProductionCycle", "PondsProductionCycles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="SumProductRequiredView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SumProductRequiredView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SumProductRequiredView object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static SumProductRequiredView CreateSumProductRequiredView(global::System.Int32 productID)
        {
            SumProductRequiredView sumProductRequiredView = new SumProductRequiredView();
            sumProductRequiredView.ProductID = productID;
            return sumProductRequiredView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> totalRequired
        {
            get
            {
                return _totalRequired;
            }
            set
            {
                OntotalRequiredChanging(value);
                ReportPropertyChanging("totalRequired");
                _totalRequired = StructuralObject.SetValidValue(value, "totalRequired");
                ReportPropertyChanged("totalRequired");
                OntotalRequiredChanged();
            }
        }
        private Nullable<global::System.Decimal> _totalRequired;
        partial void OntotalRequiredChanging(Nullable<global::System.Decimal> value);
        partial void OntotalRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Supplier CreateSupplier(global::System.Int32 supplierID, global::System.String firstName, global::System.String userID)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierID = supplierID;
            supplier.FirstName = firstName;
            supplier.UserID = userID;
            return supplier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                if (_SupplierID != value)
                {
                    OnSupplierIDChanging(value);
                    ReportPropertyChanging("SupplierID");
                    _SupplierID = StructuralObject.SetValidValue(value, "SupplierID");
                    ReportPropertyChanged("SupplierID");
                    OnSupplierIDChanged();
                }
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value, true, "DOB");
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.String _DOB;
        partial void OnDOBChanging(global::System.String value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value, "EntryDate");
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_PurchaseOrders_Vendor", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CPLModel.FK_PurchaseOrders_Vendor", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CPLModel.FK_PurchaseOrders_Vendor", "PurchaseOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="assignedTo">Initial value of the assignedTo property.</param>
        public static Task CreateTask(global::System.Int32 taskID, global::System.String title, global::System.String status, global::System.Int32 assignedTo)
        {
            Task task = new Task();
            task.TaskID = taskID;
            task.Title = title;
            task.Status = status;
            task.assignedTo = assignedTo;
            return task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CompletePercentage
        {
            get
            {
                return _CompletePercentage;
            }
            set
            {
                OnCompletePercentageChanging(value);
                ReportPropertyChanging("CompletePercentage");
                _CompletePercentage = StructuralObject.SetValidValue(value, "CompletePercentage");
                ReportPropertyChanged("CompletePercentage");
                OnCompletePercentageChanged();
            }
        }
        private Nullable<global::System.Double> _CompletePercentage;
        partial void OnCompletePercentageChanging(Nullable<global::System.Double> value);
        partial void OnCompletePercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 assignedTo
        {
            get
            {
                return _assignedTo;
            }
            set
            {
                OnassignedToChanging(value);
                ReportPropertyChanging("assignedTo");
                _assignedTo = StructuralObject.SetValidValue(value, "assignedTo");
                ReportPropertyChanged("assignedTo");
                OnassignedToChanged();
            }
        }
        private global::System.Int32 _assignedTo;
        partial void OnassignedToChanging(global::System.Int32 value);
        partial void OnassignedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attachments
        {
            get
            {
                return _Attachments;
            }
            set
            {
                OnAttachmentsChanging(value);
                ReportPropertyChanging("Attachments");
                _Attachments = StructuralObject.SetValidValue(value, true, "Attachments");
                ReportPropertyChanged("Attachments");
                OnAttachmentsChanged();
            }
        }
        private global::System.String _Attachments;
        partial void OnAttachmentsChanging(global::System.String value);
        partial void OnAttachmentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PondID
        {
            get
            {
                return _PondID;
            }
            set
            {
                OnPondIDChanging(value);
                ReportPropertyChanging("PondID");
                _PondID = StructuralObject.SetValidValue(value, "PondID");
                ReportPropertyChanged("PondID");
                OnPondIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PondID;
        partial void OnPondIDChanging(Nullable<global::System.Int32> value);
        partial void OnPondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, true, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> plannedManHours
        {
            get
            {
                return _plannedManHours;
            }
            set
            {
                OnplannedManHoursChanging(value);
                ReportPropertyChanging("plannedManHours");
                _plannedManHours = StructuralObject.SetValidValue(value, "plannedManHours");
                ReportPropertyChanged("plannedManHours");
                OnplannedManHoursChanged();
            }
        }
        private Nullable<global::System.Double> _plannedManHours;
        partial void OnplannedManHoursChanging(Nullable<global::System.Double> value);
        partial void OnplannedManHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionCycleID;
        partial void OnProductionCycleIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductionCycleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isDone
        {
            get
            {
                return _isDone;
            }
            set
            {
                OnisDoneChanging(value);
                ReportPropertyChanging("isDone");
                _isDone = StructuralObject.SetValidValue(value, "isDone");
                ReportPropertyChanged("isDone");
                OnisDoneChanged();
            }
        }
        private Nullable<global::System.Boolean> _isDone;
        partial void OnisDoneChanging(Nullable<global::System.Boolean> value);
        partial void OnisDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReccurencePattern
        {
            get
            {
                return _ReccurencePattern;
            }
            set
            {
                OnReccurencePatternChanging(value);
                ReportPropertyChanging("ReccurencePattern");
                _ReccurencePattern = StructuralObject.SetValidValue(value, true, "ReccurencePattern");
                ReportPropertyChanged("ReccurencePattern");
                OnReccurencePatternChanged();
            }
        }
        private global::System.String _ReccurencePattern;
        partial void OnReccurencePatternChanging(global::System.String value);
        partial void OnReccurencePatternChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_Contacts", "Contacts")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_Tasks_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_Tasks_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CPLModel.FK_Tasks_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CPLModel.FK_Tasks_Contacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_Ponds", "Ponds")]
        public Pond Pond
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_Tasks_Ponds", "Ponds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_Tasks_Ponds", "Ponds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pond> PondReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pond>("CPLModel.FK_Tasks_Ponds", "Ponds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pond>("CPLModel.FK_Tasks_Ponds", "Ponds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_Tasks_PondsProductionCycle", "PondsProductionCycles")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_Tasks_PondsProductionCycle", "PondsProductionCycles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_Tasks_PondsProductionCycle", "PondsProductionCycles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_Tasks_PondsProductionCycle", "PondsProductionCycles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_Tasks_PondsProductionCycle", "PondsProductionCycles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductRequired_Tasks", "ProductRequireds")]
        public EntityCollection<ProductRequired> ProductRequireds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductRequired>("CPLModel.FK_ProductRequired_Tasks", "ProductRequireds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductRequired>("CPLModel.FK_ProductRequired_Tasks", "ProductRequireds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ProductSalesOrders_Tasks", "ProductSalesOrders")]
        public EntityCollection<ProductSalesOrder> ProductSalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Tasks", "ProductSalesOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSalesOrder>("CPLModel.FK_ProductSalesOrders_Tasks", "ProductSalesOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_ResultNote_ResultNote", "ResultNotes")]
        public EntityCollection<ResultNote> ResultNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultNote>("CPLModel.FK_ResultNote_ResultNote", "ResultNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultNote>("CPLModel.FK_ResultNote_ResultNote", "ResultNotes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="UnitofMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitofMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitofMeasurement object.
        /// </summary>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        public static UnitofMeasurement CreateUnitofMeasurement(global::System.Int32 uOMID)
        {
            UnitofMeasurement unitofMeasurement = new UnitofMeasurement();
            unitofMeasurement.UOMID = uOMID;
            return unitofMeasurement;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                if (_UOMID != value)
                {
                    OnUOMIDChanging(value);
                    ReportPropertyChanging("UOMID");
                    _UOMID = StructuralObject.SetValidValue(value, "UOMID");
                    ReportPropertyChanged("UOMID");
                    OnUOMIDChanged();
                }
            }
        }
        private global::System.Int32 _UOMID;
        partial void OnUOMIDChanging(global::System.Int32 value);
        partial void OnUOMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UOMName
        {
            get
            {
                return _UOMName;
            }
            set
            {
                OnUOMNameChanging(value);
                ReportPropertyChanging("UOMName");
                _UOMName = StructuralObject.SetValidValue(value, true, "UOMName");
                ReportPropertyChanged("UOMName");
                OnUOMNameChanged();
            }
        }
        private global::System.String _UOMName;
        partial void OnUOMNameChanging(global::System.String value);
        partial void OnUOMNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPLModel", Name="WaterParameterLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WaterParameterLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WaterParameterLog object.
        /// </summary>
        /// <param name="waterLogID">Initial value of the WaterLogID property.</param>
        /// <param name="logDate">Initial value of the LogDate property.</param>
        /// <param name="productionCycleID">Initial value of the ProductionCycleID property.</param>
        public static WaterParameterLog CreateWaterParameterLog(global::System.Int32 waterLogID, global::System.DateTime logDate, global::System.Int32 productionCycleID)
        {
            WaterParameterLog waterParameterLog = new WaterParameterLog();
            waterParameterLog.WaterLogID = waterLogID;
            waterParameterLog.LogDate = logDate;
            waterParameterLog.ProductionCycleID = productionCycleID;
            return waterParameterLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WaterLogID
        {
            get
            {
                return _WaterLogID;
            }
            set
            {
                if (_WaterLogID != value)
                {
                    OnWaterLogIDChanging(value);
                    ReportPropertyChanging("WaterLogID");
                    _WaterLogID = StructuralObject.SetValidValue(value, "WaterLogID");
                    ReportPropertyChanged("WaterLogID");
                    OnWaterLogIDChanged();
                }
            }
        }
        private global::System.Int32 _WaterLogID;
        partial void OnWaterLogIDChanging(global::System.Int32 value);
        partial void OnWaterLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value, "LogDate");
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private global::System.DateTime _LogDate;
        partial void OnLogDateChanging(global::System.DateTime value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> pH
        {
            get
            {
                return _pH;
            }
            set
            {
                OnpHChanging(value);
                ReportPropertyChanging("pH");
                _pH = StructuralObject.SetValidValue(value, "pH");
                ReportPropertyChanged("pH");
                OnpHChanged();
            }
        }
        private Nullable<global::System.Double> _pH;
        partial void OnpHChanging(Nullable<global::System.Double> value);
        partial void OnpHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DissolvedOxygen
        {
            get
            {
                return _DissolvedOxygen;
            }
            set
            {
                OnDissolvedOxygenChanging(value);
                ReportPropertyChanging("DissolvedOxygen");
                _DissolvedOxygen = StructuralObject.SetValidValue(value, "DissolvedOxygen");
                ReportPropertyChanged("DissolvedOxygen");
                OnDissolvedOxygenChanged();
            }
        }
        private Nullable<global::System.Double> _DissolvedOxygen;
        partial void OnDissolvedOxygenChanging(Nullable<global::System.Double> value);
        partial void OnDissolvedOxygenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Temperature
        {
            get
            {
                return _Temperature;
            }
            set
            {
                OnTemperatureChanging(value);
                ReportPropertyChanging("Temperature");
                _Temperature = StructuralObject.SetValidValue(value, "Temperature");
                ReportPropertyChanged("Temperature");
                OnTemperatureChanged();
            }
        }
        private Nullable<global::System.Double> _Temperature;
        partial void OnTemperatureChanging(Nullable<global::System.Double> value);
        partial void OnTemperatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Planktons
        {
            get
            {
                return _Planktons;
            }
            set
            {
                OnPlanktonsChanging(value);
                ReportPropertyChanging("Planktons");
                _Planktons = StructuralObject.SetValidValue(value, "Planktons");
                ReportPropertyChanged("Planktons");
                OnPlanktonsChanged();
            }
        }
        private Nullable<global::System.Int32> _Planktons;
        partial void OnPlanktonsChanging(Nullable<global::System.Int32> value);
        partial void OnPlanktonsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Salinity
        {
            get
            {
                return _Salinity;
            }
            set
            {
                OnSalinityChanging(value);
                ReportPropertyChanging("Salinity");
                _Salinity = StructuralObject.SetValidValue(value, "Salinity");
                ReportPropertyChanged("Salinity");
                OnSalinityChanged();
            }
        }
        private Nullable<global::System.Double> _Salinity;
        partial void OnSalinityChanging(Nullable<global::System.Double> value);
        partial void OnSalinityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bacteria
        {
            get
            {
                return _Bacteria;
            }
            set
            {
                OnBacteriaChanging(value);
                ReportPropertyChanging("Bacteria");
                _Bacteria = StructuralObject.SetValidValue(value, true, "Bacteria");
                ReportPropertyChanged("Bacteria");
                OnBacteriaChanged();
            }
        }
        private global::System.String _Bacteria;
        partial void OnBacteriaChanging(global::System.String value);
        partial void OnBacteriaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Vibrio
        {
            get
            {
                return _Vibrio;
            }
            set
            {
                OnVibrioChanging(value);
                ReportPropertyChanging("Vibrio");
                _Vibrio = StructuralObject.SetValidValue(value, true, "Vibrio");
                ReportPropertyChanged("Vibrio");
                OnVibrioChanged();
            }
        }
        private global::System.String _Vibrio;
        partial void OnVibrioChanging(global::System.String value);
        partial void OnVibrioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Amonnia
        {
            get
            {
                return _Amonnia;
            }
            set
            {
                OnAmonniaChanging(value);
                ReportPropertyChanging("Amonnia");
                _Amonnia = StructuralObject.SetValidValue(value, "Amonnia");
                ReportPropertyChanged("Amonnia");
                OnAmonniaChanged();
            }
        }
        private Nullable<global::System.Double> _Amonnia;
        partial void OnAmonniaChanging(Nullable<global::System.Double> value);
        partial void OnAmonniaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Phospate
        {
            get
            {
                return _Phospate;
            }
            set
            {
                OnPhospateChanging(value);
                ReportPropertyChanging("Phospate");
                _Phospate = StructuralObject.SetValidValue(value, "Phospate");
                ReportPropertyChanged("Phospate");
                OnPhospateChanged();
            }
        }
        private Nullable<global::System.Double> _Phospate;
        partial void OnPhospateChanging(Nullable<global::System.Double> value);
        partial void OnPhospateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ammonium
        {
            get
            {
                return _ammonium;
            }
            set
            {
                OnammoniumChanging(value);
                ReportPropertyChanging("ammonium");
                _ammonium = StructuralObject.SetValidValue(value, "ammonium");
                ReportPropertyChanged("ammonium");
                OnammoniumChanged();
            }
        }
        private Nullable<global::System.Double> _ammonium;
        partial void OnammoniumChanging(Nullable<global::System.Double> value);
        partial void OnammoniumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nitrite
        {
            get
            {
                return _nitrite;
            }
            set
            {
                OnnitriteChanging(value);
                ReportPropertyChanging("nitrite");
                _nitrite = StructuralObject.SetValidValue(value, "nitrite");
                ReportPropertyChanged("nitrite");
                OnnitriteChanged();
            }
        }
        private Nullable<global::System.Int32> _nitrite;
        partial void OnnitriteChanging(Nullable<global::System.Int32> value);
        partial void OnnitriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nitrate
        {
            get
            {
                return _nitrate;
            }
            set
            {
                OnnitrateChanging(value);
                ReportPropertyChanging("nitrate");
                _nitrate = StructuralObject.SetValidValue(value, "nitrate");
                ReportPropertyChanged("nitrate");
                OnnitrateChanged();
            }
        }
        private Nullable<global::System.Int32> _nitrate;
        partial void OnnitrateChanging(Nullable<global::System.Int32> value);
        partial void OnnitrateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Paddlewheel
        {
            get
            {
                return _Paddlewheel;
            }
            set
            {
                OnPaddlewheelChanging(value);
                ReportPropertyChanging("Paddlewheel");
                _Paddlewheel = StructuralObject.SetValidValue(value, "Paddlewheel");
                ReportPropertyChanged("Paddlewheel");
                OnPaddlewheelChanged();
            }
        }
        private Nullable<global::System.Int32> _Paddlewheel;
        partial void OnPaddlewheelChanging(Nullable<global::System.Int32> value);
        partial void OnPaddlewheelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionCycleID
        {
            get
            {
                return _ProductionCycleID;
            }
            set
            {
                OnProductionCycleIDChanging(value);
                ReportPropertyChanging("ProductionCycleID");
                _ProductionCycleID = StructuralObject.SetValidValue(value, "ProductionCycleID");
                ReportPropertyChanged("ProductionCycleID");
                OnProductionCycleIDChanged();
            }
        }
        private global::System.Int32 _ProductionCycleID;
        partial void OnProductionCycleIDChanging(global::System.Int32 value);
        partial void OnProductionCycleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPLModel", "FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles")]
        public PondsProductionCycle PondsProductionCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PondsProductionCycle> PondsProductionCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PondsProductionCycle>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PondsProductionCycle>("CPLModel.FK_WaterParameterLog_PondsProductionCycle", "PondsProductionCycles", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
